define({"303":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Dimension Attributes.htm",l:-1,t:"OLAP Dimension Attributes",i:0.000737535493508448,a:"Dimensional attributes contain information about the Dimension object. Attributes are exposed in the cube to provide the ability to navigate and aggregate the data in the cube. User defined hierarchies can be built over attributes to provide drill paths through the data and to aid aggregation. The ..."},"304":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Dim Attr Rels.htm",l:-1,t:"OLAP Dimension Attribute Relationships",i:0.000737535493508448,a:"Attribute relationships define functional dependencies between attributes. If attribute A has a related attribute B in a hierarchical relationship, then an attribute relationship can be defined that assists Analysis Services to aggregate data. To view the Properties of an attribute relationship ..."},"305":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Dimension Hierarchies.htm",l:-1,t:"OLAP Dimension Hierarchies",i:0.000737535493508448,a:"User defined hierarchies define hierarchical relationships between related dimensional attributes (e.g. Geographical or Time based attributes). These related attributes are defined as levels within the hierarchy. To view the properties of a user defined Hierarchy, right-click the Hierarchy and then ..."},"306":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Dim UserDef Hierar Lvls.htm",l:-1,t:"OLAP Dimension User Defined Hierarchy Levels",i:0.000737535493508448,a:"The levels specify the drill path over a set of related attributes. The classic hierarchy levels are Year, Month, Date in a Calendar based hierarchy in the date dimension. To view the Properties of a user defined Hierarchy Level, right-click a user defined Hierarchy Level and then select Properties. ..."},"307":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Changing OLAP Cubes.htm",l:-1,t:"OLAP Changing OLAP Cubes",i:0.000737535493508448,a:"An understanding of the dependency of objects within Analysis Services is the key to figuring out what needs to be dropped or recreated in a cube database using WhereScape RED. Changes to the underlying relational star schema can cause cube processing to fail as the star schema is frozen in the Data ..."},"308":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Retrofitting an OLAP Object.htm",l:-1,t:"OLAP Retrofitting an OLAP Object",i:0.000737535493508448,a:"WhereScape RED provides the functionality for retrofitting OLAP cubes from Analysis Services.  The process to retrofit an OLAP dimension is as follows: Right-click the OLAP Dimension object heading in the left pane and select New Object.  Enter any name for the object name and click ADD.  Fill the ..."},"309":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/Tabular Models.htm",l:-1,t:"Tabular Models",i:0.000737535493508448,a:"WhereScape RED MSAS\u0027s Tabular Mode functionality is enabled for SQL Server, Oracle and Teradata repositories, available only for Dimension, Fact and EDW3NF objects. To use this RED functionality, users need to ensure they have a Microsoft Analysis Services Server running in Tabular mode available. ..."},"310":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/DefDataSource_Targets_TabularModels.htm",l:-1,t:"Defining the Data Source and Targets for Tabular Models",i:0.000737535493508448,a:"To use the MSAS Tabular mode functionality in RED, start by following your SQL Server setup\u0027s Installation to \"New SQL Server stand-alone installation or add features to an existing installation\" option to ensure that your Analysis Server Configuration has been installed for Tabular Mode. In RED, ..."},"311":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/Defining a Tabular Model.htm",l:-1,t:"Defining a Tabular Model",i:0.000737535493508448,a:"Browse your Data Warehouse connection. Within your Tabular Project, click the Fact Table object group on the left pane to set your work pane to be your Fact Tables. From the right pane, drag a Fact Table into the middle pane, rename it with a tabular or relevant reference and select the Tabular ..."},"312":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/Tabular Model Measures.htm",l:-1,t:"Tabular Model Measures",i:0.000737535493508448,a:"When a new Tabular fact table is created, all numeric columns that are market as additive (apart from key columns) will have auto-created measure totals. If the created columns are not relevant for the table, they can be deleted by using the right-click option to Delete Column. To add new measures ..."},"313":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/Tabular Model Calculated Columns.htm",l:-1,t:"\n           Tabular Model Calculated Columns\n        ",i:0.000737535493508448,a:"\n           Tabular Model Calculated Columns\n         To add Calculated Columns to a Tabular Model: Go to the Fact table\u0027s relevant column properties\u0027 screen to set the following fields: Column name: \"combined_tax\" Business Display Name: \"Combined Tax\" Type: Column Click the Transformation tab and ..."},"314":{y:0,u:"../Content/User Guide/Exporting Data/Exporting Data.htm",l:-1,t:"Exporting Data",i:0.0046334033210062,a:"Export objects are used in WhereScape RED to produce ascii files from a single database table or view for a downstream feed. Some or all of the columns in a table or view can be exported.  There are three ways of performing exports in RED: File export - an export where most of the processing is ..."},"315":{y:0,u:"../Content/User Guide/Exporting Data/Building an Export Object.htm",l:-1,t:"Building an Export Object",i:0.000737535493508448,a:"Note The simplest way to create an export object is to use the drag and drop functionality of WhereScape RED. Creating an Export: Browse to the Datawarehouse connection  (Browse \u003e Source Tables) . Create a drop target by double-clicking on the Export object group in the left pane. The middle pane ..."},"316":{y:0,u:"../Content/User Guide/Exporting Data/File Attributes.htm",l:-1,t:"File Attributes",i:0.000737535493508448,a:"File Attributes The following fields are available to define the location, name and contents of the exported data file: SQL Server File Attributes example screen: Greenplum File Attributes example screen: Export File Definition Trigger File File Actions  "},"317":{y:0,u:"../Content/User Guide/Exporting Data/File Attributes SSIS Exports.htm",l:-1,t:"File Attributes - SSIS Exports",i:0.000737535493508448,a:"File Attributes - SSIS Exports The following fields below are available to define the location, name and definitions of the exported data file: SQL Server File Attributes example screen Export File Definition SQL Server Integration Services (SSIS)"},"318":{y:0,u:"../Content/User Guide/Exporting Data/Export Column Properties.htm",l:-1,t:"Export Column Properties",i:0.000737535493508448,a:"Export Column Properties General Physical Definition Meta Definition Source Details  "},"319":{y:0,u:"../Content/User Guide/Exporting Data/Script based Exports.htm",l:-1,t:"Script Based Exports",i:0.000737535493508448,a:"A script based export object will have a Host Script defined. During the export process, the host script is executed and the results returned. During the drag and drop creation of an export object from a single table or view, a script can be generated by selecting one of the \u0027Script based\u0027 export ..."},"320":{y:0,u:"../Content/User Guide/Transformations/Transformations.htm",l:-1,t:"Transformations",i:0.00993534899778946,a:"Standard  column transformations  can be used in WhereScape RED to perform calculations, change data types or format data. Re-using complex transformations can save a significant amount of time. These can be achieved in the following ways with WhereScape RED: Database Functions WhereScape RED ..."},"321":{y:0,u:"../Content/User Guide/Transformations/Column Transformations.htm",l:-1,t:"Column Transformations",i:0.0137488133573658,a:"Each table or export object column can have a transformation associated with it. For all table types, except for load tables, the transformation will be included in the generated procedure for the table. These are executed as part of the procedure update. The transformation must therefore be a valid ..."},"322":{y:0,u:"../Content/User Guide/Transformations/Col Transform Props.htm",l:-1,t:"Column Transformation Properties",i:0.00136446233898428,a:"An example below shows the transformation Properties screen with a simple transformation: The two special update keys allow you to update the column and step either forward or backward to the next column\u0027s properties. ALT-Left Arrow and ALT-Right Arrow can also be used instead of the two special ..."},"323":{y:0,u:"../Content/User Guide/Transformations/Load Tbl Col Transforms.htm",l:-1,t:"Load Table Column Transformations",i:0.00656507304191698,a:"Data entering the data warehouse can be manipulated if required. This manipulation can occur at any stage, but is supported via a number of methods during the Load stage. Load tables provide options to transform data. If multiple pass transformations are required, then a Load table can be created ..."},"324":{y:0,u:"../Content/User Guide/Transformations/Dbase Link Load Transforms.htm",l:-1,t:"Database Link During Load Transformations",i:0.000737535493508448,a:"The during load transformation allows the manipulation of column data as it enters the data warehouse. By default, Database link loads and ODBC based loads have During and After transformations enabled.   When transformations are enabled, the contents of a source table/source column for each column ..."},"325":{y:0,u:"../Content/User Guide/Transformations/File During Load Transforms.htm",l:-1,t:"File During Load Transformations",i:0.000737535493508448,a:"The loading of flat files is performed using the database specific loader. For Oracle, this is SQL*LOADER. For SQL Server it is the Bulk Insert Transact SQL statement. The contents of the Transformation tab in the column\u0027s Properties are the functions and conversions supported by the database ..."},"326":{y:0,u:"../Content/User Guide/Transformations/After Load Transforms.htm",l:-1,t:"After Load Transformations",i:0.000737535493508448,a:"After transformations will initiate a pass of the Load table after the load has occurred. They enable manipulation of the Load table columns using the database and SQL functions.   SQL Server Example: The following after transformation set for the column code in the table load_product ..."},"327":{y:0,u:"../Content/User Guide/Transformations/Database Functions.htm",l:-1,t:"Database Functions",i:0.000737535493508448,a:"Database functions can be created in the data warehouse database (as procedure objects in WhereScape RED) and used in column transformation in WhereScape RED. Refer to the Oracle and SQL Server documentation on functions and  Procedures and Scripts  for more information on creating functions inside ..."},"328":{y:0,u:"../Content/User Guide/Transformations/Re-usable Transforms.htm",l:-1,t:"Re-usable Transformations",i:0.000737535493508448,a:"WhereScape RED Re-usable Transformations allow a complex SQL transformation using standard database functions (including User Defined Functions) to be built once and reused in multiple column transformations. Functionality is included to manage and propagate changes to re-usable transformations.    "},"329":{y:0,u:"../Content/User Guide/Transformations/Create New Reusable Transform.htm",l:-1,t:"Creating a New Re-usable Transformation",i:0.00163091815487121,a:"New re-usable transformations are created from the Tools \u003e Define Re-Usable Transformations menu. Creating a new re-usable transformation is a three step process: Specify the name of the transformation Enter metadata for the transformation Define the transformation"},"330":{y:0,u:"../Content/User Guide/Transformations/Specify Name of Transform.htm",l:-1,t:"Specify the Name of the Transformation",i:0.000737535493508448,a:"Specify the Name of the Transformation After selecting Define Re-Usable Transformations from the Tools menu, the following screen is displayed: Click New Transform and enter a name for the re-usable transformation: Click OK.    "},"331":{y:0,u:"../Content/User Guide/Transformations/Enter Reusable Transform Meta.htm",l:-1,t:"Enter Re-usable Transformation Metadata",i:0.000737535493508448,a:"Enter Re-usable Transformation Metadata Enter the following metadata for the transformation to describe the transformation for developers.    "},"332":{y:0,u:"../Content/User Guide/Transformations/Define the Transform Model.htm",l:-1,t:"Define the Transformation Model",i:0.000737535493508448,a:"Once the transformation has been created and the metadata entered, the actual SQL code used by the transformation can be defined. The SQL code can be entered directly or via the Function Builder on the right. To use the Function Builder, expand the tree to find the required function.   Oracle ..."},"333":{y:0,u:"../Content/User Guide/Transformations/Comp Reusable Transform.htm",l:-1,t:"Completed Re-usable Transformation",i:0.000737535493508448,a:"Completed Re-usable Transformation    "},"334":{y:0,u:"../Content/User Guide/Transformations/Changing Reusable Transform.htm",l:-1,t:"Changing a Re-usable Transformation",i:0.000737535493508448,a:"To change a re-usable transformation: Select Re-Usable Transformations from the Tools menu. Choose the transformation from the Transform Name drop-down list. Click on the Model Tab. Change the SQL as required. Click OK. Example of a change to the Model SQL In the example used in Creating a New ..."},"335":{y:0,u:"../Content/User Guide/Transformations/Apply Chngs to Dep Transforms.htm",l:-1,t:"Applying Changes to Dependant Transformations",i:0.000737535493508448,a:"After changing a Re-usable Transformation, a dialog appears asking to confirm that changes should be applied to individual columns using the transformation, where possible: If the Re-usable Transformation doesn\u0027t have any dependant columns, then the following message is displayed: If the Re-usable ..."},"336":{y:0,u:"../Content/User Guide/Transformations/Using Reusable Transforms.htm",l:-1,t:"Using Re-usable Transformations",i:0.000737535493508448,a:"Using Re-usable Transformations Re-usable transformations are used exactly the same way as any standard database Function. They can be used on any object type. Refer to  Column Transformation Properties  for details."},"337":{y:0,u:"../Content/User Guide/Procedures and Scripts/Procedures and Scripts.htm",l:-1,t:"Procedures and Scripts",i:0.00181115366966566,a:"WhereScape RED has a Procedure object group for database stored procedures and a Script object group for host system scripts, such as UNIX shell scripts or Windows batch files. Procedures WhereScape RED generates the bulk of the procedures during a prototype build, but these procedures can be ..."},"338":{y:0,u:"../Content/User Guide/Procedures and Scripts/Procedure Generation.htm",l:-1,t:"Procedure Generation",i:0.000737535493508448,a:"WhereScape RED generates template procedures to assist in the various phases of the data warehouse build process. A procedure is generated by selecting the (Build Procedure...) option from a drop-down list field in a table\u0027s Properties window to configure the update, initial build, or post load ..."},"339":{y:0,u:"../Content/User Guide/Procedures and Scripts/Procedure Editing.htm",l:-1,t:"Procedure Editing",i:0.000737535493508448,a:"WhereScape RED includes a procedure editor which allows the maintenance of the various procedures, functions and packages within the data warehouse. The editor is invoked by double-clicking on a procedure name in the left pane or by right-clicking on the procedure name and selecting Edit the ..."},"340":{y:0,u:"../Content/User Guide/Procedures and Scripts/Procedure Loading and Saving.htm",l:-1,t:"Procedure Loading and Saving",i:0.000737535493508448,a:"Procedures are normally stored in the WhereScape RED metadata tables. When a procedure is opened within WhereScape RED then the data is retrieved from the meta tables. Likewise when the procedure is saved, it overwrites the existing data in the meta tables. When a procedure is compiled, it is also ..."},"341":{y:0,u:"../Content/User Guide/Procedures and Scripts/Procedure Comparisons.htm",l:-1,t:"Procedure Comparisons",i:0.000737535493508448,a:"A procedure can be compared to either an earlier version, or to the currently running code as compiled/stored in the database. The menu option Tools \u003e Compare to Compiled Source enables the comparison of the procedure being edited with the code currently compiled and running in the database. If a ..."},"342":{y:0,u:"../Content/User Guide/Procedures and Scripts/Procedure Compilation.htm",l:-1,t:"Procedure Compilation",i:0.00105099891624636,a:"From within the procedure editor a procedure can be compiled by selecting the menu option Compile \u003e Compile or by clicking the Compile icon. If the procedure compiles successfully, a window appears confirming a successful compile. If the compile fails, then error message comments are inserted into ..."},"343":{y:0,u:"../Content/User Guide/Procedures and Scripts/Procedure Running.htm",l:-1,t:"Procedure Running",i:0.000737535493508448,a:"Only procedures that conform to the WhereScape RED scheduler syntax can be executed from within the procedure editor. Select the Execute \u003e Execute menu option or click the Execute icon to run the procedure. A procedure must have been compiled in order to run.   The results of the procedure is ..."},"344":{y:0,u:"../Content/User Guide/Procedures and Scripts/Procedure Syntax.htm",l:-1,t:"Procedure Syntax",i:0.000737535493508448,a:"The procedures managed by the WhereScape RED scheduler require the following standards. If a function or procedure is being developed that is not called directly by the scheduler, then it does not need to conform with this standard. If however, such a procedure or function wants to log messages to ..."},"345":{y:0,u:"../Content/User Guide/Procedures and Scripts/Procedure Properties.htm",l:-1,t:"Procedure Properties",i:0.00907448829649511,a:"The Properties screen for procedures and scripts is the same. A procedure can be renamed by changing the name field.  If a procedure is renamed, then it is also necessary to change the procedure name within the actual code. The Purpose and Owner fields are purely informational. In the above example, ..."},"346":{y:0,u:"../Content/User Guide/Procedures and Scripts/Procedure Migration.htm",l:-1,t:"Procedure Migration",i:0.00947335814841227,a:"WhereScape RED provides the Multiple SQL database feature to enable tables to be distributed across multiple databases, instead of only a single database—refer to  Distributing Tables across Multiple SQL Server Databases  for details. Update procedures for Table objects are stored in the RED ..."},"347":{y:0,u:"../Content/User Guide/Procedures and Scripts/Script Generation.htm",l:-1,t:"Script Generation",i:0.00131745473213329,a:"WhereScape RED generates template scripts to assist in the loading of textual files from UNIX or Windows. These scripts are generated when a UNIX or Windows file is dragged into a Load table target and one of the \u0027Script based\u0027 file load options is chosen. Typically, script loads are used when some ..."},"348":{y:0,u:"../Content/User Guide/Procedures and Scripts/Script Generation (Windows_SQL Server).htm",l:-1,t:"Script Generation (Windows/SQL Server)",i:0.000737535493508448,a:"A sample Windows script for SQL Server is as follows. The key components of the script are described below: The script makes use of a number of environmental variables. These variable are acquired from both the Table and Connection properties. These variables are established in the environment by ..."},"349":{y:0,u:"../Content/User Guide/Procedures and Scripts/Windows PowerShell Scripts.htm",l:-1,t:"Windows PowerShell Scripts",i:0.00959543592345997,a:"In addition to the conventional Windows scripting and other tools, WhereScape RED also supports Windows PowerShell scripts for loading data into a WhereScape RED managed Data Warehouse, as well as for exporting data from a WhereScape RED managed Data Warehouse.   The Windows PowerShell command line ..."},"350":{y:0,u:"../Content/User Guide/Procedures and Scripts/Script Generation UNIX Oracle.htm",l:-1,t:"Script Generation (UNIX/Oracle)",i:0.000737535493508448,a:"A sample UNIX script for Oracle is as follows. The key components of the script are described below: The script makes use of two environmental variables called DSS_USER and DSS_PWD. These variables are established in the environment by the scheduler. If the script is to be executed outside of ..."},"351":{y:0,u:"../Content/User Guide/Procedures and Scripts/Script Generation (Windows_Oracle).htm",l:-1,t:"Script Generation (Windows/Oracle)",i:0.000737535493508448,a:"A sample Windows script for Oracle is as follows. The key components of the script are described below: The script makes use of a number of environmental variables. These variables are acquired from both the table and connection properties. These variables are established in the environment by ..."},"352":{y:0,u:"../Content/User Guide/Procedures and Scripts/Script Editing.htm",l:-1,t:"Script Editing",i:0.000737535493508448,a:"WhereScape RED includes a script editor which allows the maintenance of any host scripts within the data warehouse. The editor is invoked by double-clicking on a script name in the left pane or by right-clicking the script name and then selecting Edit the Script from the context menu. Similar to the ..."},"353":{y:0,u:"../Content/User Guide/Procedures and Scripts/Script Testing.htm",l:-1,t:"Script Testing",i:0.000737535493508448,a:"When a host script is scheduled, it is run in the scheduler environment. Therefore a UNIX scheduler must be available to run a UNIX script and only a Windows scheduler can run a Windows script. It is possible to test a script interactively. For a Windows script, this is achieved by running the ..."},"354":{y:0,u:"../Content/User Guide/Procedures and Scripts/Script Syntax.htm",l:-1,t:"Script Syntax",i:0.00136446233898428,a:"There are a number of conventions that must be followed if a host script is to be used by the WhereScape scheduler. These conventions are: The first line of data in \u0027standard out\u0027 must contain the resultant status of the script. Valid values are \u00271\u0027 to indicate success, \u0027-1\u0027 to indicate a warning ..."},"355":{y:0,u:"../Content/User Guide/Procedures and Scripts/Script Environment Variables.htm",l:-1,t:"Script Environment Variables",i:0.000737535493508448,a:"The following environment variables are available for all script loads and script exports, both Windows and UNIX/Linux. All load scripts The following variables are available in all load scripts:   All load scripts from Database or ODBC connections In addition to the variables in the previous table, ..."},"356":{y:0,u:"../Content/User Guide/Procedures and Scripts/Calling a Batch File from a Script.htm",l:-1,t:"Calling a Batch File from a Script",i:0.000737535493508448,a:"Calling a Batch File from a Script Below is an example RED host script which calls a batch file: Where \"c:\\temp\\MyBatchFile.bat\" contains this: Create the Host Script in RED: Edit the Script and enter the following: Save the Script: When the script is executed, you will see the following results:  "},"357":{y:0,u:"../Content/User Guide/Procedures and Scripts/Scheduling Scripts.htm",l:-1,t:"Scheduling Scripts",i:0.000737535493508448,a:"When a host script is scheduled, it is run in the scheduler environment. Therefore, a UNIX scheduler must be available to run a UNIX script and only a Windows scheduler can run a Windows script. It is important to set the connection on the Properties screen for the script.  Right-click on the host ..."},"358":{y:0,u:"../Content/User Guide/Procedures and Scripts/Manually Created Scripts.htm",l:-1,t:"Manually Created Scripts",i:0.000737535493508448,a:"Individual scripts can also be manually created in RED to perform and schedule tasks that are not related to load tables. The example below shows a minimal script that will run successfully.  Please note that you need to use the following codes to determine the script\u0027s results meaning. It is ..."},"359":{y:0,u:"../Content/User Guide/Templates/Templates.htm",l:-1,t:"Templates",i:0.00231827204130457,a:"Templates provide the ability to customize automatically generated code within RED. This feature is most suited to users that would like to customize automatically generated code or would like to expand RED to support non-native database platforms. Creating templates is an advanced function that ..."},"360":{y:0,u:"../Content/User Guide/Templates/Template Properties.htm",l:-1,t:"Template Properties",i:0.00131745473213329,a:"The properties screen for a template is shown below. Name, Purpose and Author fields should be completed to provide background information on the template; these fields are purely informational. Created and Last Update fields provide date information on the template. The Target DB sets the type of ..."},"361":{y:0,u:"../Content/User Guide/PebbleTemplate/Pebble Templates.htm",l:-1,t:"Pebble Templates",i:0.00113165370323129,a:"Pebble is a scripting language that generates text output, based on provided meta data. The usage of Pebble templates in WhereScape RED does not require knowledge of Java. When looking at the Pebble documentation  ignore the references to Java, including information about setting up Pebble in Java. ..."},"362":{y:0,u:"../Content/User Guide/PebbleTemplate/RED_Template_API.html",l:-1,t:"Pebble Templates",i:0.00479370612268422,a:"Operation Types Create DDL env\n             table\n             options\n             settings\n             Types\n             Custom Procedure env\n             table\n             options\n             settings\n             Types\n             Export Script env\n             table\n             options\n   ..."},"363":{y:0,u:"../Content/User Guide/Templates/Template Editor.htm",l:-1,t:"Template Editor",i:0.000737535493508448,a:"Right-click a template and select Edit the Template or View Template to open the Template editor. Similar to the procedure and script editors, the template editor includes the following features: Pebble syntax highlighting \timproved find feature (repeated find, up and down, etc.) \ttoggle the display ..."},"364":{y:0,u:"../Content/User Guide/Templates/Evaltng API Outline Temp.htm",l:-1,t:"Evaluating an API Outline Template",i:0.000737535493508448,a:"An API Outline Template is available to output all object properties relevant to the current object. Upon evaluation of this template, the status of each property is generated and printed to the script or procedure file. To evaluate an API Outline Template: Create a new template. The template can ..."},"365":{y:0,u:"../Content/User Guide/PebbleTemplate/Pebble_Syntax.html",l:-1,t:"Pebble Syntax",i:0.00113165370323129,a:"Pebble Syntax Controls"},"366":{y:0,u:"../Content/User Guide/PebbleTemplate/PebbleTemplate_Tags.htm",l:-1,t:"Pebble Template Tags",i:0.000737535493508448,a:"autoescape The autoescape tag can be used to temporarily disable/re-enable the autoescaper as well as change the escaping strategy for a portion of the template. block A section that can be overridden by a child template. extends The extends tag is used to declare a parent template. It should be the ..."},"367":{y:0,u:"../Content/User Guide/PebbleTemplate/PebbleTemplate_Functions.htm",l:-1,t:"Pebble Template Functions",i:0.000737535493508448,a:"block The block function is used to render the contents of a block tag more than once. max The max function will return the largest of it\u0027s numerical arguments. min The min function will return the smallest of it\u0027s numerical arguments. parent The parent function is used inside of a block to render ..."},"368":{y:0,u:"../Content/User Guide/PebbleTemplate/PebbleTemplate_Filters.htm",l:-1,t:"Pebble Template Filters",i:0.000737535493508448,a:"abbreviate The abbreviate filter will abbreviate a string using an ellipsis. It takes one argument which is the max width of the desired output including the length of the ellipsis. abs The abs filter is used to obtain the absolute value. capitalize The capitalize filter will capitalize the first ..."},"369":{y:0,u:"../Content/User Guide/PebbleTemplate/PebbleTemplate_Tests.htm",l:-1,t:"Pebble Template Tests",i:0.000737535493508448,a:"defined The defined test checks if a variable exists. empty The empty test checks if a variable is empty. A variable is empty if it is null, an empty string, an empty collection, or an empty map. even The even test checks if an integer is even. iterable The iterable test checks if a variable ..."},"370":{y:0,u:"../Content/User Guide/PebbleTemplate/PebbleTemplate_Variables.htm",l:-1,t:"Pebble Template Variables",i:0.000737535493508448,a:"Pebble Template Variables StringUtil Provides common string function support.    "},"371":{y:0,u:"../Content/User Guide/Templates/Template Usage.htm",l:-1,t:"Template Usage",i:0.00129747739117534,a:"Template Usage If a template exists of the correct Type and Target DB, templates can be specified and evaluated as follows: To check which Operations are supported by Templates on your Target database, refer to  Templates  for details.  "},});