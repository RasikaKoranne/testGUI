define({"163":{y:0,u:"../Content/User Guide/Loading Data/Choosing the Best Load Method.htm",l:-1,t:"Choosing the Best Load Method",i:0.000737535493508448,a:"Several different factors need to be considered when choosing the best type of load table to use: Source and target database types Locations of source and target databases Available connectivity options and performance Amount of data being loaded Is the data delivered or fetched? For delivered data, ..."},"164":{y:0,u:"../Content/User Guide/Loading Data/Load Drag and Drop.htm",l:-1,t:"Load Drag and Drop",i:0.000737535493508448,a:"The simplest way to create a Load table is to use the drag and drop functionality of WhereScape RED.  Drag and drop can be used for all connection types and the process is the same in all cases. Browse to the source system connection (Browse \u003e Source Tables). Create a drop target by double-clicking ..."},"165":{y:0,u:"../Content/User Guide/Loading Data/Data Type Mappings.htm",l:-1,t:"Data Type Mappings",i:0.000737535493508448,a:"Data Type Mappings In Tools \u003e Data Type Mappings, the first menu option enables you to maintain the data type mappings. The Maintain Data Mappings window is as follows: Refer to  Data Type Mappings  for details about how to manage data mappings in RED."},"166":{y:0,u:"../Content/User Guide/Loading Data/Database Link Load.htm",l:-1,t:"Database Link Load",i:0.000737535493508448,a:"Database Link Load"},"167":{y:0,u:"../Content/User Guide/Loading Data/Database Link Load - Properties.htm",l:-1,t:"Database Link Load - Properties",i:0.00183073019789539,a:"Database Link Load - Properties The fields in the Database Link Load Properties screen are described below:    "},"168":{y:0,u:"../Content/User Guide/Loading Data/Database Link Load - Source Mapping.htm",l:-1,t:"Database Link Load - Source Mapping",i:0.00128611224354537,a:"Database Link Load - Source Mapping The fields in the  Database Link Load Source Screen  are described below: General  "},"169":{y:0,u:"../Content/User Guide/Loading Data/Load Table Src Map Scn Exmpls.htm",l:-1,t:"Load Tble Src Map Scrn Exmpls",i:0.00101084675959153,a:"Load Table Source Mapping Screen SQL Server Source screen: Oracle Source screen: DB2 Source screen:"},"170":{y:0,u:"../Content/User Guide/Loading Data/Remote View Extract - Oracle Databases Only.htm",l:-1,t:"Remote View Extract - Oracle Databases Only",i:0.00568431536128648,a:"Remote view extracts are used to force a remote Oracle source system database to perform complex extraction logic in the remote source system database and return the results to the data warehouse. When specifying a join in an extract (load) over a database link, the Oracle cost based optimizer ..."},"171":{y:0,u:"../Content/User Guide/Loading Data/ODBC Based Load.htm",l:-1,t:"ODBC Based Load",i:0.000737535493508448,a:"An ODBC based load provides an extensive option for acquiring data from many sources. It will be slower than most other forms of loads but may still be a viable option depending on the volume of data being loaded. An ODBC based \u0027interactive load\u0027 when using the WhereScape RED tool will use the ..."},"172":{y:0,u:"../Content/User Guide/Loading Data/SSIS Loader.htm",l:-1,t:"SSIS Loader",i:0.000737535493508448,a:"Microsoft SQL Server Integration Services (SSIS) is an Extract Transform and Load (ETL) utility that is supplied and licensed as part of Microsoft SQL Server 2005+. SSIS is built to extract data from data sources using extraction technologies, such as OLEDB, transform the data using its own .NET ..."},"173":{y:0,u:"../Content/User Guide/Loading Data/Loading data into RED load tables using SSIS.htm",l:-1,t:"Loading data into RED load tables using SSIS",i:0.00164871414659443,a:"To use SSIS loading, ensure that SSIS loads are enabled and that the SSIS version is set correctly in Tools \u003e Options \u003e Code Generation \u003e General. Refer to  Loading Data from a Flat File using SSIS  for details, if you are loading data from a Flat File source. RED can extract and load data using ..."},"174":{y:0,u:"../Content/User Guide/Loading Data/SSIS Load Table Source Screen.htm",l:-1,t:"SSIS Load Table Source Screen",i:0.000737535493508448,a:"SSIS Load Table Source Screen The configuration options available on a SSIS load are available on the Source tab of the Load table’s Properties. These options are: General SQL Server Integration Services (SSIS) SQL Server SSIS load Source screen example: PDW SSIS load Source screen example:"},"175":{y:0,u:"../Content/User Guide/Loading Data/Troubleshooting.htm",l:-1,t:"Troubleshooting",i:0.000737535493508448,a:"If an SSIS load fails due to incorrect connection strings, then the SSIS package will fail to create at run time. The connection string information in both the source connection and the data warehouse connection (the destination) must be checked to ensure that they are correct.  If the SSIS load ..."},"176":{y:0,u:"../Content/User Guide/Loading Data/Native ODBC Based Load.htm",l:-1,t:"Native ODBC Based Load",i:0.000737535493508448,a:"A Native ODBC based load is similar to an ODBC load, except it provides a faster method to load data from non-linked databases. A Native ODBC based interactive load when using the WhereScape RED tool will use the established ODBC connection to pull the data back to a delimited file on the local PC ..."},"177":{y:0,u:"../Content/User Guide/Loading Data/Native ODBC Based Load - Source Screen.htm",l:-1,t:"Native ODBC Based Load - Source Screen",i:0.000913299763155044,a:"The fields on the Source tab for Native ODBC loads are described below. Oracle and DB2 Source screen examples can also be found at the bottom of this topic. SQL Server Source Screen: General Native ODBC Load Oracle and DB2 Source screen examples: Oracle Source Screen: DB2 Source Screen:"},"178":{y:0,u:"../Content/User Guide/Loading Data/File Actions.htm",l:-1,t:"Custom Objects",i:0.000737535493508448,a:"File Actions A file action defines a copy, move or delete step that happens to Native ODBC temporary files after a load is run.  There are six different file action programs:   Creating a File Action To create a file action: Click the File Actions tab of the Load table Properties window. Click Add ..."},"179":{y:0,u:"../Content/User Guide/Loading Data/File Action Example.htm",l:-1,t:"File Action Example",i:0.000737535493508448,a:"File Action Example The following example moves the Native ODBC Load data file to another directory then deletes all temporary files. Sample move data file file action: Sample delete all files file action:"},"180":{y:0,u:"../Content/User Guide/Loading Data/Flat File Loads.htm",l:-1,t:"Flat File Load",i:0.00325968680140304,a:"Flat File Loads Flat file loads can be performed from either a Windows, UNIX/Linux or Hadoop connection. As with all other load types it is easier to use the drag and drop functionality to create load tables.  Flat files can also be loaded using SQL Server Integration Services (SSIS). For Flat File ..."},"181":{y:0,u:"../Content/User Guide/Loading Data/Loading Data from Flat Files using SSIS.htm",l:-1,t:"Loading Data from Flat Files using SSIS",i:0.0012046906755654,a:"Flat files can be loaded into RED from a Windows Connection using SQL Server Integration Services (SSIS). The instructions below detail how to add the SSIS connection string to the data warehouse connection and load flat files using the drag and drop functionality to create Load tables. To load ..."},"182":{y:0,u:"../Content/User Guide/Loading Data/Flat File Load Source Screen.htm",l:-1,t:"Flat File Load - Source Screen",i:0.00239140213037728,a:"Flat File Load - Source Screen The fields for the Flat File Source Screen are described below. See example source screens in  File and Script based load Source screens .    "},"183":{y:0,u:"../Content/User Guide/Loading Data/File and Script based load source screens.htm",l:-1,t:"File and Script based load source screens",i:0.00124570372897353,a:"SQL Server File load Source screen: SQL Server Script load Source screen from a Windows connection: Oracle File load Source screen: Oracle Script Load Source screen from a Hadoop connection: Oracle Native SSH Load Source screen from a Hadoop connection:  DB2 File load Source screen:"},"184":{y:0,u:"../Content/User Guide/Loading Data/Script based load.htm",l:-1,t:"Script based load",i:0.00201608787713568,a:"Script Based Load A script based load table must have a Host Script defined. During the load process this host script is executed and the results returned. During the \u0027drag and drop\u0027 creation of a load table from a UNIX or Windows file a script can be generated by selecting one of the \u0027Script based\u0027 ..."},"185":{y:0,u:"../Content/User Guide/Loading Data/File Wild Card Load.htm",l:-1,t:"File Wild Card Load",i:0.000737535493508448,a:"The loading of multiple files in one pass is best undertaken as a host script. A generated host script contains the code to handle wild card loads and the subsequent loading and renaming of multiple files. The process for setting up wild card loads is as follows: Drag one of the files into a Load ..."},"186":{y:0,u:"../Content/User Guide/Loading Data/XML File load.htm",l:-1,t:"XML File load",i:0.00119934127606258,a:"XML file loads are only supported from a Windows connection. There are multiple formats for data exchange when using XML. See the  sections below for details on how an XML file is handled.   To load an XML file located in a Windows directory, proceed as follows: Create a connection to the Windows ..."},"187":{y:0,u:"../Content/User Guide/Loading Data/External Load.htm",l:-1,t:"External Load",i:0.000737535493508448,a:"For an externally loaded table, the only property that is executed is the Post Load procedure. Any After transformations recorded against any of the columns in an Externally loaded table will also be processed. Post load procedures can either be manually generated from a RED provided procedure ..."},"188":{y:0,u:"../Content/User Guide/Loading Data/Apache Sqoop Load.htm",l:-1,t:"Apache Sqoop Load",i:0.00116346957109248,a:"The Apache Sqoop load type enables loading data directly from Hive/HDFS to any (non-Hive) targets. This load method provides a non database specific method of loading data into any database target, which is especially helpful when loading data directly from HDFS or Hive to SQL Server and Oracle ..."},"189":{y:0,u:"../Content/User Guide/Loading Data/Handling Missing Source Columns.htm",l:-1,t:"Handling Missing Source Columns",i:0.00132431018232944,a:"By default, a load fails if a source column that is to be loaded does not exist. This default action can be modified by using the Allow Missing Source Columns feature of a load table.  When this feature is enabled the load process will check all source columns, and if any are found to be missing ..."},"190":{y:0,u:"../Content/User Guide/Loading Data/Load Table Transformations.htm",l:-1,t:"Load Table Transformations",i:0.00132431018232944,a:"Load Table Transformations Each load table column can have a transformation associated with it.  Refer to  Transformations  and  Load Table Column Transformations  for details."},"191":{y:0,u:"../Content/User Guide/Loading Data/Post-Load Procedures.htm",l:-1,t:"Post-Load Procedures",i:0.00136446233898428,a:"If a procedure name is entered in the Post Load Procedure drop-down field of a Load table\u0027s Properties, then this procedure will be executed after the load has completed and after any after transformations have occurred. Click the Rebuild button to start the process of generating a new procedure. ..."},"192":{y:0,u:"../Content/User Guide/Loading Data/Changing Load Connection and Schema.htm",l:-1,t:"Changing Load Connection and Schema",i:0.00159691325946826,a:"The connection associated with a load table can be changed through the Properties of that table. Connections can also be changed in bulk by using the following process: Double-click the Load table object group in the left pane. This displays all the Load tables in the middle pane. Select the Load ..."},"193":{y:0,u:"../Content/User Guide/Dimensions/Dimensions.htm",l:-1,t:"Dimensions",i:0.000737535493508448,a:"Dimensions    "},"194":{y:0,u:"../Content/User Guide/Dimensions/Dim Overview.htm",l:-1,t:"Dimensions Overview",i:0.000737535493508448,a:"A dimension table is normally defined, for our purposes, as a table that enables us to constrain queries on the fact table. A dimension is built from the Data Warehouse connection. Unless you are doing a retro-fit of an existing system, dimensions are typically built from one or more load tables. ..."},"195":{y:0,u:"../Content/User Guide/Dimensions/Building a Dimension.htm",l:-1,t:"Building a Dimension",i:0.00141584014137288,a:"Dimensions are often sourced from one table in the base application. In many cases, there are also codes that require description lookups to complete the de-normalization of the dimensional data.  The process for building a dimension is the same for most other tables and begins with the drag and ..."},"196":{y:0,u:"../Content/User Guide/Dimensions/Gen Dim Update Proc.htm",l:-1,t:"Generating the Dimension Update Procedure",i:0.00243970386717301,a:"Once a dimension has been defined in the meta data and created in the database, an update procedure can be generated to handle the joining of any tables and the update of the dimension records. The zero key row WhereScape RED by default, inserts a record into the dimension with an artificial key ..."},"197":{y:0,u:"../Content/User Guide/Dimensions/Dim Artificial Keys.htm",l:-1,t:"Dimension Artificial Keys",i:0.000894267204877406,a:"The artificial (surrogate) key for a dimension is set via a sequence in Oracle and an identity column in SQL Server and DB2.  This artificial key normally, and by default, starts at one and progresses as far as is required.   A WhereScape standard for the creation of special rows in the dimension is ..."},"198":{y:0,u:"../Content/User Guide/Dimensions/Dim Get Key Function.htm",l:-1,t:"Dimension Get Key Function",i:0.000737535493508448,a:"When WhereScape RED generated a new procedure to support the update of a Dimension, it also generates a Get Key function (procedure in SQL Server and DB2). This function is also generated when Dimension Views are created and can be generated for retro-fitted Dimensions. The Get Key function is used ..."},"199":{y:0,u:"../Content/User Guide/Dimensions/Dim Initial Build.htm",l:-1,t:"Dimension Initial Build",i:0.000894267204877406,a:"The initial population of a dimension with data can be achieved by generating a custom procedure and then use the right-click context menu to select the Execute Custom Procedure via Scheduler option.  The dimension should be analyzed once the custom procedure is completed so that the database query ..."},"200":{y:0,u:"../Content/User Guide/Dimensions/Dim Col Properties.htm",l:-1,t:"Dimension Column Properties",i:0.0011637990998346,a:"Each dimension column has a set of associated properties. The definition of each property is described below: A sample Properties screen is as follows: General Physical Definition Meta Definition Code Generation Source Details Changing a Column Name  If the Column name or Data type is changed for a ..."},"201":{y:0,u:"../Content/User Guide/Dimensions/Dim Col Transforms.htm",l:-1,t:"Dimension Column Transformations",i:0.00268828485303767,a:"Each Dimension table column can have a transformation associated with it. The transformation is included in the generated procedure and is executed as part of the procedure update.  The transformation must therefore be a valid SQL construct that can be included in a Select statement. For example, we ..."},"202":{y:0,u:"../Content/User Guide/Dimensions/Dim Hierarchies.htm",l:-1,t:"Dimension Hierarchies",i:0.00111333856948507,a:"The various hierarchies associated with a dimension can be recorded in the WhereScape RED metadata. These hierarchies are often not used in any form, except to provide documentary completeness.   When used in conjunction with the hierarchy maintenance utility, these dimension hierarchies add a ..."},"203":{y:0,u:"../Content/User Guide/Dimensions/Adding a Dim Hierarchy.htm",l:-1,t:"Adding a Dimension Hierarchy",i:0.000737535493508448,a:"Any number of hierarchies can be created against a dimension. There is no restriction on the form of the hierarchy.  To add a new hierarchy, right-click the dimension table in the left pane and select Hierarchies \u003e Add Hierarchy.  The following window appears. Enter a meaningful name for the ..."},"204":{y:0,u:"../Content/User Guide/Dimensions/Snowflake.htm",l:-1,t:"Snowflake",i:0.000737535493508448,a:"Snowflake schemas normalize dimensions to eliminate redundancy; that is, the dimension data has been grouped into multiple tables instead of one large table.  For example, a product dimension table in a star schema might be EDW 3NF into a products table, a product_category table, and a ..."},"205":{y:0,u:"../Content/User Guide/Dimensions/Creating a Snowflake.htm",l:-1,t:"Creating a Snowflake",i:0.000737535493508448,a:"A snowflake dimensional structure is supported by WhereScape RED.  A snowflake can be created for EDW 3NF or partially EDW 3NF dimension tables, by including the surrogate key of the parent dimension in the child dimension.  In the example below, the dim_state table represents the parent dimension.  ..."},"206":{y:0,u:"../Content/User Guide/Dimensions/Dim Lang Mapping.htm",l:-1,t:"Dimension Language Mapping",i:0.000737535493508448,a:"The Dimension Properties screen has a Language Mapping tab.  Select the language from the drop-down list. Enter the translations for the Business Display Name and the Description in the chosen language.  The translations for these fields can then be pushed through into OLAP cubes. To add a language ..."},"207":{y:0,u:"../Content/User Guide/Staging/Staging.htm",l:-1,t:"Staging",i:0.000737535493508448,a:"Stage tables are used to transform the data to a star schema or third normal form model. A stage table can be a fact or an EDW 3NF table that only contains change data or a work table. In star schema data warehouses, the stage table brings all the dimensional joins together in preparation for ..."},"208":{y:0,u:"../Content/User Guide/Staging/Building the Stage Table.htm",l:-1,t:"Building the Stage Table",i:0.000894267204877406,a:"Building the stage table is potentially the most challenging part of the overall task of building a data warehouse analysis area. Most of the effort required is in the design phase, in terms of knowing what data needs to come into the fact table that will ultimately be built. This section assumes ..."},"209":{y:0,u:"../Content/User Guide/Staging/Gen the Stage Update Proc.htm",l:-1,t:"Generating the Staging Update Procedure",i:0.0021621945494326,a:"Once a stage table has been defined in the metadata and created in the database, an update procedure can be generated to handle the joining of any tables and the lookup of the dimension table artificial keys.  Generating a Procedure To generate a procedure, right-click on the stage table in the left ..."},"210":{y:0,u:"../Content/User Guide/Staging/Tuning  Stage Update Proc.htm",l:-1,t:"Tuning the Staging Update Process",i:0.000894267204877406,a:"This section is for Cursor based procedures only. It is not relevant for Set based or other types. When generating the cursor based procedures to update the staging table, WhereScape REDincludes an Update/Insert logic. This logic first attempts to update an existing staging record and then inserts a ..."},"211":{y:0,u:"../Content/User Guide/Staging/Stage Table Col Props.htm",l:-1,t:"Stage Table Column Properties",i:0.000862920862603614,a:"Each Stage table column has a set of associated properties. The definition of each property is defined below: If the Column name or Data type is changed for a column, then the metadata will differ from the table as recorded in the database.  Use the Validate \u003e Validate Table Create Status menu ..."},"212":{y:0,u:"../Content/User Guide/Staging/Stage Table Col Transforms.htm",l:-1,t:"Stage Table Column Transformations",i:0.00110429007942375,a:"Each Stage table column can have a transformation associated with it. The transformation will be included in the generated procedure and will be executed as part of the procedure update.  The transformation must therefore be a valid SQL construct that can be included in a Select statement.  For ..."},"213":{y:0,u:"../Content/User Guide/Staging/Set Merge Procedure.htm",l:-1,t:"Set Merge Procedure",i:0.00135018510670773,a:"The set merge procedure type allows the merging of two or more identical tables. The tables to be merged must have exactly the same number of columns and column names.  If necessary, additional blank columns could be added to one or other of the tables to make them identical.  To use this procedure ..."},"214":{y:0,u:"../Content/User Guide/Data Store Objects/Data Store Objects.htm",l:-1,t:"Data Store Objects",i:0.000737535493508448,a:"Data Store Objects    "},"215":{y:0,u:"../Content/User Guide/Data Store Objects/Data Store Obj Overview.htm",l:-1,t:"Overview",i:0.000737535493508448,a:"A Data Store Object is a data warehouse object used to store any type of data for later processing.  In WhereScape RED, Data Store objects have many of the code generating attributes of Stage, Dimension and Fact tables. Data Store objects can be thought of as a source system for the data warehouse.  ..."},"216":{y:0,u:"../Content/User Guide/Data Store Objects/Build Data Store Obj.htm",l:-1,t:"Building a Data Store Object",i:0.000946511108667058,a:"Data Store Objects are often sourced from one table in the base application.  The process for building a Data Store Object begins with the drag and drop of the load or stage table that contains the bulk of the Data Store Object\u0027s information. Drag and Drop Create a Data Store Object target by ..."},"217":{y:0,u:"../Content/User Guide/Data Store Objects/Gen Data Store Upd Proc.htm",l:-1,t:"Generating the Data Store Update Procedure",i:0.0012146991273561,a:"Once a Data Store object has been defined in the metadata and created in the database, an update procedure can be generated to handle the joining of any tables and the update of the Data Store object. Generating a Procedure To generate a procedure: Right-click the Data Store object in the left pane ..."},"218":{y:0,u:"../Content/User Guide/Data Store Objects/Data Store Artificial Keys.htm",l:-1,t:"Data Store Artificial Keys",i:0.000737535493508448,a:"By default, Data Store Objects in WhereScape RED do not have an artificial (surrogate) key.  Artificial keys can be added manually but if needed could indicate Data Store Objects are not the correct WhereScape RED object for this table (perhaps an EDW 3NF Table would be more appropriate).  Edit the ..."},"219":{y:0,u:"../Content/User Guide/Data Store Objects/Data Store Col Props.htm",l:-1,t:"Data Store Column Properties",i:0.00113110888129265,a:"Each Data Store Object column has a set of associated properties. The definition of each property is described below: If the Column name or Data type is changed for a column then the metadata will differ from the table as recorded in the database.  Use the Validate/Validate Table Create Status menu ..."},"220":{y:0,u:"../Content/User Guide/Data Store Objects/Data Store Obj Col Transforms.htm",l:-1,t:"Data Store Object Column Transformations",i:0.000737535493508448,a:"Each Data Store Object column can have a transformation associated with it. The transformation is included in the generated procedure and is executed as part of the procedure update.  The transformation must therefore be a valid SQL construct that can be included in a Select statement.  For example, ..."},"221":{y:0,u:"../Content/User Guide/EDW 3NF Tables/EDW 3NF Tables.htm",l:-1,t:"EDW 3NF Tables",i:0.00136446233898428,a:"EDW 3NF Tables  "},"222":{y:0,u:"../Content/User Guide/EDW 3NF Tables/EDW 3NF Table Overview.htm",l:-1,t:"EDW 3NF Table Overview",i:0.000737535493508448,a:"An EDW 3NF Table is a data warehouse object used to build third normal form enterprise data warehouses.  In WhereScape RED, EDW 3NF objects have many of the code generating attributes of Stage, Dimension and Fact tables.  Third normal form enterprise data warehouses can be thought of as a source ..."},"223":{y:0,u:"../Content/User Guide/EDW 3NF Tables/Building an EDW 3NF Table.htm",l:-1,t:"Building an EDW 3NF Table",i:0.000894267204877406,a:"EDW 3NF tables are often sourced from one table in the base application. The process for building an EDW 3NF table begins with the drag and drop of the Load or Stage table that contains the bulk of the EDW 3NF table\u0027s information. Drag and Drop Create an EDW 3NF table target by double-clicking  the ..."},"224":{y:0,u:"../Content/User Guide/EDW 3NF Tables/Gen the EDW 3NF Upd Proc.htm",l:-1,t:"Generating the EDW 3NF Update Procedure",i:0.00114765212268384,a:"Once an EDW 3NF object has been defined in the metadata and created in the database, an update procedure can be generated to handle the joining of any tables and the update of the EDW 3NF object. Generating a Procedure To generate a procedure: Right-click the EDW 3NF object in the left pane and ..."},"225":{y:0,u:"../Content/User Guide/EDW 3NF Tables/EDW 3NF Table Artificial Keys.htm",l:-1,t:"EDW 3NF Table Artificial Keys",i:0.000894267204877406,a:"By default, EDW 3NF tables in WhereScape RED do not have an artificial (surrogate) key. Artificial keys can be added manually.  The quickest way to do this is to add an extra column to the EDW 3NF table by using either Add Column or Copy Column. Edit the properties of the new column to have the ..."},"226":{y:0,u:"../Content/User Guide/EDW 3NF Tables/EDW 3NF Table Col Props.htm",l:-1,t:"EDW 3NF Table Column Properties",i:0.00111630578041005,a:"Each EDW 3NF table column has a set of associated properties. The definition of each property is described below: If the Column name or Data type is changed for a column then the metadata will differ from the table as recorded in the database.  Use the Validate \u003e Validate Table Create Status menu ..."},"227":{y:0,u:"../Content/User Guide/EDW 3NF Tables/EDW 3NF Tbl Col Transforms.htm",l:-1,t:"EDW 3NF Table Column Transformations",i:0.00168643206492551,a:"Each EDW 3NF table column can have a transformation associated with it. The transformation will be included in the generated procedure and will be executed as part of the procedure update.  The transformation must therefore be a valid SQL construct that can be included in a Select statement.  For ..."},"228":{y:0,u:"../Content/User Guide/Data Vaults/Data Vaults.htm",l:-1,t:"Data Vaults",i:0.00454538885361254,a:"The Data Vault system is an alternative approach to modeling an enterprise data warehouse that has been gaining popularity among organizations.  The Data Vault data warehouse architecture was invented by Dan Linstedt to provide an alternative to the traditional data warehouse modeling approach that ..."},"229":{y:0,u:"../Content/User Guide/Data Vaults/Data Vault Functions and Features.htm",l:-1,t:"Data Vault Functions and Features",i:0.000737535493508448,a:"Data Vault Functions and Features The following describe the WhereScape RED functions and features that are used for building Data Vault objects (Hub, Link and Satellite) to create a Data Vault model. "},"230":{y:0,u:"../Content/User Guide/Data Vaults/Load Table Meta Data Columns .htm",l:-1,t:"Load Table Meta Data Columns",i:0.000737535493508448,a:"The option to add default meta data columns to a new Load table object in WhereScape RED.    If the option Add meta data columns to table is selected, two DSS columns (dss_record_source and dss_load_date) are included in the meta data for the table and are populated by transformations. Note that ..."},"231":{y:0,u:"../Content/User Guide/Data Vaults/Data Vault Stage Table.htm",l:-1,t:"Data Vault Stage Table",i:0.000737535493508448,a:"WhereScape RED provides the option to create Data Vault Stage objects that are used to define the source columns for the Hub, Link and Change hash key columns.   The Data Vault Stage option can be selected from Table Type drop-down of the Stage Table Properties screen. This object type is created ..."},"232":{y:0,u:"../Content/User Guide/Data Vaults/Hash Key Generation Wizard.htm",l:-1,t:"Hash Key Generation Wizard",i:0.00407144932741292,a:"This Wizard is launched when building a Stage table with Table Type of Data Vault Stage. It enables you to specify the source columns to be used in defining the Hub, Link and Change hash key columns. The generated Hash Keys are used to build the Hub, Link and Satellite objects in WhereScape RED. The ..."},"233":{y:0,u:"../Content/User Guide/Data Vaults/Hub Link and Satellite Creation.htm",l:-1,t:"Hub, Link and Satellite Creation Wizard",i:0.000737535493508448,a:"This Wizard is launched when building a Data Vault object (Hub, Link or Satellite table) by dragging and dropping the source Data Vault Stage table from the right pane to the middle pane.  The detailed steps for using this Wizard is described  Creating the Hub, Link and Satellite Tables ."},"234":{y:0,u:"../Content/User Guide/Data Vaults/Data Vault Templates.htm",l:-1,t:"Data Vault Templates",i:0.0105667914710506,a:"Templates are used to generate update procedures for Data Vault objects. Users must select a template to use when generating the update procedure for Data Vault objects created in WhereScape RED.  The SQL Server Data Vault templates are described below: wsl_sqlserver_proc_dv_stage – this template ..."},});