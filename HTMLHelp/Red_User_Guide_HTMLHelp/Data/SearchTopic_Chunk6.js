define({"446":{y:0,u:"../Content/User Guide/Reports/Objects Project Matrix.htm",l:-1,t:"Objects-Project Matrix",i:0.000737535493508448,a:"This report lists the objects that exist in projects other than All Objects. Objects Included All object types are included in this report. Parameters There are no parameters for this report. Results The results of this report are displayed as a list of objects in the metadata repository that are in ..."},"447":{y:0,u:"../Content/User Guide/Reports/Modified Objects excluding indexes.htm",l:-1,t:"Modified Objects (excluding indexes)",i:0.000737535493508448,a:"This report shows objects in the metadata repository with their creation and modification dates. Objects Included The following WhereScape RED object types are included in this report: Load Tables Stage Tables Dimension Tables and Views Fact Tables Aggregate Tables Exports Procedures Host Scripts ..."},"448":{y:0,u:"../Content/User Guide/Reports/Objects Checked out.htm",l:-1,t:"Objects Checked-out",i:0.000737535493508448,a:"This report lists all objects currently checked out. Objects Included All object types and data warehouse tables can be included in this report. Parameters There are no parameters for this report. Results The results of this report are displayed with the following columns: Name (The name of the ..."},"449":{y:0,u:"../Content/User Guide/Reports/Loaded or Imported Objects.htm",l:-1,t:"Loaded or Imported Objects",i:0.000737535493508448,a:"This report lists objects in the metadata repository that have been refreshed or imported from another repository. Objects Included The following WhereScape RED object types are included in this report: Load Tables Stage Tables Dimension Tables and Views Fact Tables Aggregate Tables Join Indexes ..."},"450":{y:0,u:"../Content/User Guide/Reports/Objects with Extended Properties.htm",l:-1,t:"Objects with Extended Properties",i:0.000737535493508448,a:"This report lists objects in the metadata repository with Extended Properties defined. Objects Included The following WhereScape RED object types are included in this report: Connections Load Tables Stage Tables Data Store Tables Hub Tables Link Tables Satellite Tables EDW 3NF Tables Dimension ..."},"451":{y:0,u:"../Content/User Guide/Reports/Job Reports.htm",l:-1,t:"Job Reports",i:0.000737535493508448,a:"Job Reports There are three reports for analyzing Jobs: Object by Scheduler Job Jobs with an Object Tasks of a Job"},"452":{y:0,u:"../Content/User Guide/Reports/Objects by Scheduler Job.htm",l:-1,t:"Objects by Scheduler Job",i:0.000737535493508448,a:"This report shows all jobs and objects as well as the object actions. Table and Cube objects not in any jobs are displayed with a job name of No Job. Objects Included All object types are included in this report. Parameters There are no parameters for this report. Results The results of this report ..."},"453":{y:0,u:"../Content/User Guide/Reports/Jobs with an Object.htm",l:-1,t:"Jobs with an Object",i:0.000737535493508448,a:"This report shows all jobs containing a selected object and lists the job action. Objects Included All object types are included in this report. Parameters This report has one parameter: Object Name Results The results of this report are displayed as a list of jobs with the following columns: Jobs ..."},"454":{y:0,u:"../Content/User Guide/Reports/Tasks of a Job.htm",l:-1,t:"Tasks of a Job",i:0.000737535493508448,a:"This report shows all tasks for a selected job including dependencies. Objects Included All object types are included in this report. Parameters This report has one parameter: Job Name Results The results of this report are displayed as a list of task dependencies with the following columns: Task ..."},"455":{y:0,u:"../Content/User Guide/Reports/Operational Reports.htm",l:-1,t:"Operational Reports\n        ",i:0.000737535493508448,a:"Operational Reports\n         There are four Operational Reports: Object Performance History Job Performance History Task Performance History Fragmentation"},"456":{y:0,u:"../Content/User Guide/Reports/Object Performance History.htm",l:-1,t:"Object Performance History",i:0.000737535493508448,a:"This report shows the audit trail from the scheduler logs for a selected object. Objects Included All object types are included in this report. Parameters This report has one parameter: Object Name Results The results of this report are displayed as a list of audit log entries with the following ..."},"457":{y:0,u:"../Content/User Guide/Reports/Job Performance History.htm",l:-1,t:"Job Performance History",i:0.000737535493508448,a:"This report shows the performance (duration) over time of a selected job. Objects Included All object types are included in this report. Parameters This report has one parameter: Job Name Results The results of this report are displayed as a list of job instances with the following columns: Job name ..."},"458":{y:0,u:"../Content/User Guide/Reports/Task Performance History.htm",l:-1,t:"Task Performance History",i:0.000737535493508448,a:"This report shows the performance (duration) over time of a selected task within a selected job. Objects Included All object types are included in this report. Parameters This report has two parameters: Job Name Task Name (including action) Results The results of this report are displayed as a list ..."},"459":{y:0,u:"../Content/User Guide/Reports/Fragmentation.htm",l:-1,t:"Fragmentation",i:0.000737535493508448,a:"This report is only available on a SQL Server database. Objects Included All object types are included in this report. Parameters This report has no parameters. Results The results of this report are displayed as a list of tables within the database with the following columns: Database Table Name ..."},"460":{y:0,u:"../Content/User Guide/Validate/Validate.htm",l:-1,t:"Validate",i:0.000737535493508448,a:"Validate When these Validate processes are run, the results are displayed in the middle pane of the RED screen; the results of the other reports are displayed in a separate tab in the bottom pane of the RED screen."},"461":{y:0,u:"../Content/User Guide/Validate/Validate Meta data.htm",l:-1,t:"Validate Meta-data",i:0.000737535493508448,a:"This process validates the Meta data. If problems are encountered, the results are displayed in the middle pane. Use the right-click option against each identified issue to apply a repair. Sending Results to Microsoft Excel Right-click on the result set and click Output to File to send the results ..."},"462":{y:0,u:"../Content/User Guide/Validate/Validate Workflow Data.htm",l:-1,t:"Validate Workflow Data",i:0.000737535493508448,a:"This process validates the Workflow data. If problems are encountered, the results are displayed in the middle pane. Use the right-click option against each identified issue to apply a repair. Sending Results to Microsoft Excel Right-click on the result set and click Output to File to send the ..."},"463":{y:0,u:"../Content/User Guide/Validate/Validate Table Create Status.htm",l:-1,t:"Validate Table Create Status",i:0.000737535493508448,a:"This process validates a table structure in the meta data against the table in the database.  Select one or more tables and click the Validate Selected button or click the Validate All button to validate all the tables. If a table is found to be different then it can be altered by using the ..."},"464":{y:0,u:"../Content/User Guide/Validate/Validate Load Table Status.htm",l:-1,t:"Validate Load Table Status",i:0.000737535493508448,a:"This process compares a load table in the meta data with the table in the source system. It compares the columns and column data types. Sending Results to Microsoft Excel Right-click on the result set and click Output to File to send the results of this report to Microsoft Excel.    "},"465":{y:0,u:"../Content/User Guide/Validate/Validate Index Status.htm",l:-1,t:"Validate Index Status",i:0.000737535493508448,a:"This process validates an index structure in the meta data against the index in the database. Select one or more indexes and click the Validate Selected button or click the Validate All button to validate all indexes. Sending Results to Microsoft Excel Right-click on the result set and click Output ..."},"466":{y:0,u:"../Content/User Guide/Validate/Validate Procedure Status.htm",l:-1,t:"Validate Procedure Status",i:0.000737535493508448,a:"This process compares a procedure in the meta data with the compiled version of the same procedure stored within the database. The subsequent display will report either a match or a difference. If a procedure is found to differ then you can use the procedure editor to examine the exact differences ..."},"467":{y:0,u:"../Content/User Guide/Validate/List Meta Tbls not in Dbase.htm",l:-1,t:"List Meta-data Tables not in the Database",i:0.000737535493508448,a:"List Metadata Tables not in the Database This report shows database table objects in the metadata that don\u0027t exist in the data warehouse database. Objects Included The following WhereScape RED object types are included in this report: Load Tables Stage Tables Dimension Tables and Views Fact Tables ..."},"468":{y:0,u:"../Content/User Guide/Validate/List Dbase Tbls not in Meta.htm",l:-1,t:"List Database Tables not in the Meta-data",i:0.000737535493508448,a:"This report shows database table objects that exist in the data warehouse database but not in the metadata. Objects Included The following WhereScape RED object types are included in this report: Load Tables Stage Tables Dimension Tables and Views Fact Tables Aggregate Tables Retro Copies (but not ..."},"469":{y:0,u:"../Content/User Guide/Validate/List Tbls with no rel Procs or Scrpts.htm",l:-1,t:"List Tables with no related Procedures or Scripts",i:0.000737535493508448,a:"This report shows all table objects (certain types of objects only - see below) in the metadata repository that don\u0027t have an associated update procedure. Objects Included The following WhereScape RED object types are included in this report: Load Tables (script based loads only) Stage Tables ..."},"470":{y:0,u:"../Content/User Guide/Validate/List Proces not rel to Tbl.htm",l:-1,t:"List Procedures not related to a Table",i:0.000737535493508448,a:"This report shows all procedures and host scripts in the metadata repository that aren\u0027t associated with a table object. Objects Included The following WhereScape RED object types are included in this report: Procedures Host Scripts Parameters There are no parameters for this report. Results The ..."},"471":{y:0,u:"../Content/User Guide/Validate/Comp Meta Repository to another.htm",l:-1,t:"Compare Meta-data Repository to another",i:0.000737535493508448,a:"Compare Meta-data Repository to Another This report compares the current metadata repository to a remote repository. Objects Included All object types are included in this report. Parameters This report requires connection information for the remote repository to be entered. Specifically: ODBC ..."},"472":{y:0,u:"../Content/User Guide/Validate/Comp Meta Indexes to Dbase.htm",l:-1,t:"Compare Meta-data Indexes to Database",i:0.000737535493508448,a:"This report shows database indexes in the data warehouse database that don\u0027t exist in the metadata. Objects Included The following WhereScape RED object types are included in this report: Indexes Parameters There are no parameters for this report. Results The results of this report are displayed as ..."},"473":{y:0,u:"../Content/User Guide/Validate/List Dupli Buss Key Cols.htm",l:-1,t:"List Duplicate Business Key Columns",i:0.000737535493508448,a:"This report shows any columns that are the business (natural) key of more than one table. Objects Included The following WhereScape RED object types are included in this report: Stage Tables Dimension Tables and Views Fact Tables Aggregate Tables Parameters There are no parameters for this report. ..."},"474":{y:0,u:"../Content/User Guide/Validate/Query Data Warehouse Objects.htm",l:-1,t:"Query Data Warehouse Objects",i:0.000737535493508448,a:"This report allows SQL queries to be run as the user signed into the repository. Objects Included All object types and data warehouse tables can be included in this report. Parameters This report has one parameter: The SQL Query Results The results of this report are displayed with the following ..."},"475":{y:0,u:"../Content/User Guide/Promoting Between Environments/Promoting Between Environments.htm",l:-1,t:"Promoting Between Environments",i:0.000737535493508448,a:"This chapter covers the promotion of metadata objects between environments. Various methods exist for getting new or changed metadata from one repository into another repository. It is of course possible and in fact desirable to have multiple metadata repositories. At the very least we would ..."},"476":{y:0,u:"../Content/User Guide/Promoting Between Environments/Applications.htm",l:-1,t:"Applications",i:0.00291294828068484,a:"The definition of an application is discussed in this section and the process of loading and updating applications is discussed in more detail in the RED Installation Guide. Only the concepts of the use of applications are covered here. An application is defined for our purposes as a group of ..."},"477":{y:0,u:"../Content/User Guide/Promoting Between Environments/Application Creation.htm",l:-1,t:"Application Creation",i:0.004621009589618,a:"An application is created by selecting the Tools \u003e Build Deployment Application menu option.  The following screen is displayed: Once the application is defined and the objects selected, the application files are generated when you click the OK button.  If procedures are compiled as part of the ..."},"478":{y:0,u:"../Content/User Guide/Promoting Between Environments/Application Loading.htm",l:-1,t:"Application Loading",i:0.000737535493508448,a:"Applications are loaded via the RED Setup Administrator utility. The normal process for implementing an application are as follows: Run the Setup Administrator utility. Change the application directory to the application\u0027s location. Turn ON logging in the Setup Administrator utility using Tools \u003e ..."},"479":{y:0,u:"../Content/User Guide/Promoting Between Environments/Creating_Loading App_Command Line.htm",l:-1,t:"Creating and Loading Applications from the Command Line",i:0.00154527490225687,a:"It is possible to create and load applications from the command line by running a bat file. The WhereScape RED Application directory contains an example bat file  WSL_Application_Create_Restore_Point_and_Load.bat for creating and loading.  Right-click this file and select Edit to see the steps ..."},"480":{y:0,u:"../Content/Installation Guide/Setup Administrator Process Exit Codes.htm",l:-1,t:"Setup Administrator Process Exit Codes",i:0.000737535493508448,a:"When installing an application using the command line, the Setup Administrator process returns one value from a set of exit codes from its process when exiting. After an application install, when the Setup Administrator process exits, users can check the exit codes to determine the cause for a ..."},"481":{y:0,u:"../Content/User Guide/Promoting Between Environments/Importing Object Metadata.htm",l:-1,t:"Importing Object Metadata",i:0.00385329489995384,a:"Any group of objects can be imported into the current metadata repository from another repository. If an object already exists in the target repository, then it is either skipped or replaced depending on the type of import undertaken. If an object is to be replaced as part of an import, a version of ..."},"482":{y:0,u:"../Content/User Guide/Promoting Between Environments/Importing Language Files.htm",l:-1,t:"Importing Language Files",i:0.000737535493508448,a:"Language Files are loaded via the Setup Administrator utility. The normal process for implementing a Language file would be as follows: Run the Setup Administrator utility. Go to the Languages menu item in the top command bar and select Load Languages.  Right-click the Language file to be loaded and ..."},"483":{y:0,u:"../Content/User Guide/Promoting Between Environments/Data Warehouse Testing.htm",l:-1,t:"Data Warehouse Testing",i:0.000737535493508448,a:"Testing applications are loaded via the Setup Administrator utility. Refer to the RED Installation Guide for more information on how to load an application. A testing application set consists of a Procedure and an XML script and provides the ability to define a series of tests against data warehouse ..."},"484":{y:0,u:"../Content/User Guide/Backing Up and Restoring Metadata/BackUp_Restoring Metadata.htm",l:-1,t:"Backing Up and Restoring Metadata",i:0.00136446233898428,a:"This chapter covers the saving and reloading of metadata repository objects. The backup section describes the methods for backing up the metadata repository. It can also be backed up via normal database backup procedures. The restore section covers the metadata restoration functions available. ..."},"485":{y:0,u:"../Content/User Guide/Backing Up and Restoring Metadata/Backup using DB Routines.htm",l:-1,t:"Backup using DB Routines",i:0.000737535493508448,a:"The backup of the metadata repository can be undertaken as a separate exercise from the general backup of the data warehouse. The metadata backup does not backup any of the actual data warehouse tables. It only saves the table definitions, index definitions, procedures etc., so is not normally ..."},"486":{y:0,u:"../Content/User Guide/Backing Up and Restoring Metadata/Restoring DB Backups.htm",l:-1,t:"Restoring DB Backups",i:0.000737535493508448,a:"WhereScape RED metadata can be restored from a prior backup. For Oracle data warehouses, the restore can take place either from UNIX or through the WhereScape RED tool. The same set of files as defined in the backup section are used for both restores and can be moved between the Windows and UNIX ..."},"487":{y:0,u:"../Content/User Guide/Backing Up and Restoring Metadata/Unloading Metadata.htm",l:-1,t:"Unloading Metadata",i:0.000737535493508448,a:"WhereScape RED provides a generic unload utility for backing up the metadata. The advantage of this backup is that it is database, and database version independent. It can be used to backup the metadata regardless of the version of the database client running on the PC. It is possible to transport ..."},"488":{y:0,u:"../Content/User Guide/Backing Up and Restoring Metadata/Loading an Unload.htm",l:-1,t:"Loading an Unload",i:0.000737535493508448,a:"WhereScape RED metadata can be restored from a prior unload. Performing a Load An unload of a metadata repository can be loaded over the top of an existing repository. This action replaces the existing repository in its entirety. To load an unload, select the menu option Backup \u003e Load the Metadata ..."},"489":{y:0,u:"../Content/User Guide/Altering Metadata/Altering Metadata.htm",l:-1,t:"Altering Metadata",i:0.000737535493508448,a:"This chapter provides information on how to change and manipulate the data warehouse, once it has been established. New source columns or changes to the source systems from which the data warehouse is built will require modifications to both the metadata and the data warehouse tables and procedures. ..."},"490":{y:0,u:"../Content/User Guide/Altering Metadata/Validating Tables.htm",l:-1,t:"Validating Tables",i:0.000737535493508448,a:"The metadata as stored and maintained by WhereScape RED does not necessarily reflect the actual tables and procedures in use in the data warehouse. For example, if a new column is added to the metadata for a table, then that change is not automatically made in the actual physical table residing in ..."},"491":{y:0,u:"../Content/User Guide/Altering Metadata/Validating Source Load Tables.htm",l:-1,t:"Validating Source (Load) Tables",i:0.000737535493508448,a:"Changes to the source systems from which the data warehouse is built can be detected to a limited degree. The menu option Validate \u003e Validate Load Table Status enables a comparison between load tables and the source tables from which they were built. This comparison is not available for flat file or ..."},"492":{y:0,u:"../Content/User Guide/Altering Metadata/Validating Procedures.htm",l:-1,t:"Validating Procedures",i:0.000737535493508448,a:"The menu option Validate \u003e Validate Procedure Status compares procedures as stored in the metadata with those compiled and running in the data warehouse. This option provides a listing in the middle pane of each selected procedure and its status. The status will be Validates OK, Not compiled, or ..."},"493":{y:0,u:"../Content/User Guide/Altering Metadata/Altering Tables.htm",l:-1,t:"Altering Tables",i:0.00136446233898428,a:"The previous section covered the process of validating a table as defined in the metadata with the physical table as defined in the database. If a table is found to be different it is possible to alter the table. To alter a table, first validate the table through the Validate \u003e Validate Table Create ..."},"494":{y:0,u:"../Content/User Guide/Altering Metadata/Validating Indexes.htm",l:-1,t:"Validating Indexes",i:0.000737535493508448,a:"The menu option Validate \u003e Validate Index Status checks the metadata definition of an index against that in use in the database. It checks to ensure that the index exists and that the index type and columns are the same. The results are listed in the middle pane with the status of each selected ..."},"495":{y:0,u:"../Content/User Guide/Altering Metadata/Recompiling Procedures.htm",l:-1,t:"Recompiling Procedures",i:0.000737535493508448,a:"Procedures can be invalidated as a result of changes to underlying tables, or child procedures. A procedure can be recompiled through the procedure editor or via the menu option Tools \u003e Compile Procedures: .  The Compile Procedures window is displayed : All procedures in the metadata can be ..."},"496":{y:0,u:"../Content/User Guide/Callable Routines/Callable Routines.htm",l:-1,t:"Callable Routines",i:0.0024677232726834,a:"Callable Routines  "},"497":{y:0,u:"../Content/User Guide/Callable Routines/Intro_Callable Routines.htm",l:-1,t:"Introduction to Callable Routines",i:0.000737535493508448,a:"Introduction to Callable Routines"},"498":{y:0,u:"../Content/User Guide/Callable Routines/Callable Routines API.htm",l:-1,t:"Callable Routines API",i:0.000737535493508448,a:"Callable Routines API WhereScape RED callable routines provide an Application Program Interface (API) to the WhereScape RED metadata using the following SQL-invoked routines:"},"499":{y:0,u:"../Content/User Guide/Callable Routines/Callable Routines per RDBMS.htm",l:-1,t:"Callable Routines per RDBMS",i:0.000737535493508448,a:"Each WhereScape RED Callable Routine exists in the database as either a Stored Procedure or a User-defined Function that can be invoked from SQL. A Callable Procedure is invoked by a SQL call/execute statement and a Callable Function is invoked in a SQL SELECT statement or a value expression. The ..."},"500":{y:0,u:"../Content/User Guide/Callable Routines/Names Qualifier.htm",l:-1,t:"Callable Routines Names Qualifier",i:0.000737535493508448,a:"The WhereScape RED Callable Routines can be invoked using the unqualified routine name for SQL Server and Oracle. However, for Teradata and DB2 it is necessary to qualify the routine name with the owner/schema of the WhereScape RED metadata repository. All RED-generated procedures in a Teradata or ..."},"501":{y:0,u:"../Content/User Guide/Callable Routines/Common Input.htm",l:-1,t:"Callable Routines Common Input",i:0.015512392376458,a:"The following input parameters are common to most of the WhereScape RED Callable Routines, which are primarily used for integration with the WhereScape RED Scheduler. Note Typically, the parameter names of the WhereScape RED Callable Routines use a p_ prefix as indicated but in some routines a v_ ..."},"502":{y:0,u:"../Content/User Guide/Callable Routines/Callable Routines Invocation.htm",l:-1,t:"Callable Routines Invocation",i:0.000737535493508448,a:"This chapter includes examples of each WhereScape RED Callable Routine to illustrate how to invoke the routine for each RDBMS along with the necessary variable declarations. Typically, the routines are executed from a Stored Procedure so the routine‑specific examples illustrate that scenario and use ..."},"503":{y:0,u:"../Content/User Guide/Callable Routines/Alt_Invocation Methods.htm",l:-1,t:"Alternative Invocation Methods",i:0.000737535493508448,a:"Alternative Invocation Methods  "},"504":{y:0,u:"../Content/User Guide/Callable Routines/Invocation_Named Parameters.htm",l:-1,t:"Invocation using Named Parameters",i:0.000737535493508448,a:"SQL Server, Oracle, and DB2 support the passing of parameter arguments by name as an alternative to passing them by position. Typically, for most RDBMS when one parameter argument is supplied by name then all subsequent parameter arguments must be supplied in the same manner. The order of the ..."},"505":{y:0,u:"../Content/User Guide/Callable Routines/Invocation via ODBC.htm",l:-1,t:"Invocation via ODBC",i:0.000737535493508448,a:"The following examples illustrate how to invoke a WhereScape RED Callable Routine via an ODBC connection (using a tool, such as WhereScape SQL Admin), which uses both input and output parameters. The examples work for a SQL Server RED repository but for another RDBMS the routine name may need to be ..."},"506":{y:0,u:"../Content/User Guide/Callable Routines/Invocation _Command-Line.htm",l:-1,t:"Invocation via the Command-Line",i:0.000737535493508448,a:"Each WhereScape RED Callable Routine can also be invoked from the command-line using an RDBMS-specific tool such as: These tools can be used to invoke a WhereScape RED Callable Routine by connecting to the database, executing SQL statements, and disconnecting from the database. Refer to the ..."},"507":{y:0,u:"../Content/User Guide/Callable Routines/Ws_Api_Glossary.htm",l:-1,t:"Ws_Api_Glossary",i:0.000787689641146514,a:"Ws_Api_Glossary Synopsis Adds an entry to the documentation glossary. Description Adds the specified entry to the documentation glossary, which is included in documentation that is subsequently generated by WhereScape RED. Input Output  "},"508":{y:0,u:"../Content/User Guide/Callable Routines/API_SQL Server.htm",l:-1,t:"SQL Server",i:0.000737535493508448,a:"SQL Server SQL Server Parameters: Ws_Api_Glossary Callable Routine Type: PROCEDURE. SQL Server Examples: Ws_Api_Glossary"},"509":{y:0,u:"../Content/User Guide/Callable Routines/API_Teradata.htm",l:-1,t:"Teradata",i:0.000737535493508448,a:"Teradata Teradata Parameters: Ws_Api_Glossary Callable Routine Type: PROCEDURE. Teradata Examples: Ws_Api_Glossary"},"510":{y:0,u:"../Content/User Guide/Callable Routines/API_Oracle.htm",l:-1,t:"Oracle ",i:0.000737535493508448,a:"Oracle Oracle Parameters: Ws_Api_Glossary Callable Routine Type: FUNCTION. Oracle Examples: Ws_Api_Glossary"},"511":{y:0,u:"../Content/User Guide/Callable Routines/API_DB2.htm",l:-1,t:"DB2",i:0.000737535493508448,a:"DB2 DB2 Parameters: Ws_Api_Glossary Callable Routine Type: PROCEDURE. DB2 Examples: Ws_Api_Glossary  "},"512":{y:0,u:"../Content/User Guide/Callable Routines/Ws_Connect_Replace.htm",l:-1,t:"Ws_Connect_Replace",i:0.00141461648662235,a:"Ws_Connect_Replace Synopsis Replaces the contents of a connection with the details from another connection. Description Copies the details of the specified Source connection to the specified Target connection. Input Output"},"513":{y:0,u:"../Content/User Guide/Callable Routines/Connect_SQL Server.htm",l:-1,t:"Connect SQl Server",i:0.000737535493508448,a:"SQL Server SQL Server Parameters: Ws_Connect_Replace Callable Routine Type: PROCEDURE. SQL Server Examples: Ws_Connect_Replace"},"514":{y:0,u:"../Content/User Guide/Callable Routines/Connect_Teradata.htm",l:-1,t:"Connect_Teradata",i:0.000737535493508448,a:"  Teradata Teradata Parameters: Ws_Connect_Replace Callable Routine Type: PROCEDURE. Teradata Examples: Ws_Connect_Replace  "},"515":{y:0,u:"../Content/User Guide/Callable Routines/Connect_Oracle.htm",l:-1,t:"Oracle",i:0.000737535493508448,a:"Oracle Oracle Parameters: Ws_Connect_Replace Callable Routine Type: FUNCTION. Oracle Examples: Ws_Connect_Replace"},"516":{y:0,u:"../Content/User Guide/Callable Routines/Connect_DB2.htm",l:-1,t:"DB2",i:0.000737535493508448,a:"DB2 DB2 Parameters: Ws_Connect_Replace Callable Routine Type: PROCEDURE. DB2 Examples: Ws_Connect_Replace  "},"517":{y:0,u:"../Content/User Guide/Callable Routines/Ws_Job_Abort.htm",l:-1,t:"Ws_Job_Abort",i:0.000787689641146514,a:"Ws_Job_Abort Synopsis Aborts a job if it is in a running state. Description Aborts the specified job if it is in a running state, which changes it to a failed state, fails all running tasks, and holds all waiting tasks. Input Output  "},"518":{y:0,u:"../Content/User Guide/Callable Routines/Abort_SQL.htm",l:-1,t:"SQL Server",i:0.000737535493508448,a:"SQL Server SQL Server Parameters: Ws_Job_Abort Callable Routine Type: PROCEDURE. SQL Server Examples: Ws_Job_Abort"},"519":{y:0,u:"../Content/User Guide/Callable Routines/Abort_Teradata.htm",l:-1,t:"Teradata",i:0.000737535493508448,a:"Teradata Teradata Parameters: Ws_Job_Abort Callable Routine Type: PROCEDURE. Teradata Examples: Ws_Job_Abort"},"520":{y:0,u:"../Content/User Guide/Callable Routines/Abort_Oracle.htm",l:-1,t:"Oracle",i:0.000737535493508448,a:"Oracle Oracle Parameters: Ws_Job_Abort Callable Routine Type: FUNCTION. Oracle Examples: Ws_Job_Abort"},"521":{y:0,u:"../Content/User Guide/Callable Routines/Abort_DB2.htm",l:-1,t:"DB2",i:0.000737535493508448,a:"DB2 DB2 Parameters: Ws_Job_Abort Callable Routine Type: PROCEDURE. DB2 Examples: Ws_Job_Abort  "},});