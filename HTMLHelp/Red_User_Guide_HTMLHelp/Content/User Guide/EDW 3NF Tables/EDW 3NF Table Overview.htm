<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-toc-path="EDW 3NF Tables" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" /><title>EDW 3NF Table Overview</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/wmd-onlinehelp-style.css" rel="stylesheet" type="text/css" />
        <link href="../../Resources/tablestyles/note.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="nocontent">
            <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
            </div>
        </div>
        <div role="main" id="mc-main-content">
            <h2 class="Heading2">EDW 3NF Table Overview</h2>
            <p class="BodyText">An EDW 3NF Table is a data warehouse object used to build third normal form enterprise data warehouses. </p>
            <p class="BodyText">In <span class="mc-variable WS_Branding.CompanyShortName variable">WhereScape</span> <span class="mc-variable WS_Branding.Product variable">RED</span>, EDW 3NF objects have many of the code generating attributes of Stage, Dimension and Fact tables. </p>
            <p class="BodyText">Third normal form enterprise data warehouses can be thought of as a source system for star schema data marts. Alternatively, they may be reported off directly by users and reporting tools. </p>
            <p class="BodyText">EDW 3NF tables can be considered either reference or transactional in nature.</p>
            <p class="BodyText">An EDW 3NF table is built from the Data Warehouse connection. Unless you are retrofitting an existing system, EDW 3NF Tables are typically built from one or more load or stage tables. </p>
            <p class="BodyText">The EDW 3NF model may be retrofitted from an enterprise modeling tool. Refer to <a href="../Retrofitting/Importing a Data Model.htm">Importing a Data Model</a>  for details.</p>
            <p class="BodyText">The usual steps for creating an EDW 3NF model are defined below and are covered in this chapter. The steps are:</p>
            <ol>
                <li value="1">Identify the source reference or transactional data that will constitute the EDW 3NF Table. If the data is sourced from multiple tables ascertain if a join between the source tables is possible, or if one or more intermediate stage (work) tables would be a better option.</li>
                <li value="2">Using the 'drag and drop' functionality drag the load or stage table that is the primary source of information for the EDW 3NF Table into an EDW 3NF target. Refer to <a href="Building an EDW 3NF Table.htm">Building an EDW 3NF Table</a> for details.</li>
                <li value="3">If there's only one source table and all the columns from it are being used, you can select the auto create option to build and load the table. This automatically completes the next four steps. Refer to Building an EDW 3NF Table for details.</li>
                <li value="4">Add columns from other load and/or stage tables if required. Refer to <a href="Building an EDW 3NF Table.htm">Building an EDW 3NF Table</a> for details.</li>
                <li value="5">Create the EDW 3NF Table in the database. Refer to <a href="Building an EDW 3NF Table.htm">Building an EDW 3NF Table</a> for details.</li>
                <li value="6">Build the update procedure. Refer to <a href="Gen the EDW 3NF Upd Proc.htm">Generating the EDW 3NF Update Procedure</a> for details.</li>
                <li value="7">Run the update procedure and analyze the results.</li>
            </ol>
            <p class="BodyText">If necessary, modify the update procedure or create a custom procedure.</p>
            <h3>EDW 3NF Table Keys</h3>
            <p class="BodyText">EDW 3NF Tables have two types of keys that we will refer to frequently. These are the Business Key and the Artificial Key. A definition of these two key types follows:</p>
            <h4>Business Key</h4>
            <p class="BodyText">The business key is the column or columns that uniquely identify a record within an EDW 3NF Table. Where the EDW 3NF Table maps back to a single or a main table in the source system, it is usually possible to ascertain the business key by looking at the unique keys for that source table. The business key is sometimes referred to as the 'natural' key. Examples of business keys are:</p>
            <ul>
                <li>The product SKU in a product table</li>
                <li>The customer code in a customer table</li>
                <li>The IATA airport code in an airport table.</li>
            </ul>
            <p class="BodyText">It is assumed that business keys will never be NULL. If a null value is possible in a business key then the generated code will need to be modified to handle the null value by assigning some default value. <br></br>In the following examples, the business key column is modified by using a database function and default value:</p>
            <ul>
                <li><b>DB2 and Teradata: </b>COALESCE(business_key,'N/A')</li>
                <li><b>SQL Server: </b>ISNULL(business_key,'N/A')</li>
                <li><b>Oracle: </b>NVL(business_key,'N/A')</li>
            </ul>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/note.css');" class="TableStyle-note" cellspacing="0">
                <col class="TableStyle-note-Column-Column1" />
                <thead>
                    <tr class="TableStyle-note-Head-Header1">
                        <th class="TableStyle-note-HeadD-Column1-Header1">Note</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-note-Body-Body1">
                        <td class="TableStyle-note-BodyA-Column1-Body1" role="rowheader">Business keys are assumed to never be Null. If they can be null it is best to transform them to some value prior to the EDW 3NF or Stage table update. <br></br>If this is not done, an un-modified update procedure will probably fail with a duplicate key error on the business key index.</td>
                    </tr>
                </tbody>
            </table>
            <h4>Artificial Key</h4>
            <p class="BodyText">By default, EDW 3NF Tables in <span class="mc-variable WS_Branding.CompanyShortName variable">WhereScape</span> <span class="mc-variable WS_Branding.Product variable">RED</span> do not have an artificial key (artificial keys can be added manually, refer to <a href="EDW 3NF Table Artificial Keys.htm">EDW 3NF Table Artificial Keys</a> for details.</p>
            <p class="BodyText">An artificial key is the unique identifier that can be used to join an EDW 3NF Table record to other EDW 3NF Tables. <br></br>When joining EDW 3NF Tables it would be possible to perform the join using the business key. For EDW 3NF Tables that satisfy one of more of the following conditions, joining with business keys could result in slow query times and excessive use of database storage:</p>
            <ul>
                <li>Multiple column business keys (excessive storage and multiple column joins)</li>
                <li>One or more large character business key columns (excessive storage)</li>
                <li>Very large tables (excessive storage - integer artificial keys often use less space than one small character field)</li>
                <li>History EDW 3NF Tables (complex joins involving a between dates construct)</li>
            </ul>
            <p class="BodyText">As query time is one of our key drivers in data warehouse implementations the best answer is often to use some form of artificial key. <br></br>A price is paid in the additional processing required doing key lookups, but this is offset by the reduced query times and reduced complexity.</p>
            <p class="BodyText">The artificial key is an integer and is built sequentially from 1 upwards. </p>
            <p class="BodyText">Refer to the section on artificial keys for a more detailed explanation. An artificial key is sometimes referred to as a "surrogate" key.</p>
            <p class="SubHeading1">&#160;</p>
        </div>
    </body>
</html>