<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-toc-path="Data Store Objects" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" /><title>Building a Data Store Object</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/wmd-onlinehelp-style.css" rel="stylesheet" type="text/css" />
        <link href="../../Resources/tablestyles/tip.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../Resources/tablestyles/note.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../Resources/tablestyles/tablestyle.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="nocontent">
            <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
            </div>
        </div>
        <div role="main" id="mc-main-content">
            <h2>Building a Data Store Object</h2>
            <p>Data Store Objects are often sourced from one table in the base application. </p>
            <p>The process for building a Data Store Object begins with the drag and drop of the load or stage table that contains the bulk of the Data Store Object's information.</p>
            <h3>Drag and Drop</h3>
            <ol>
                <li value="1">Create a Data Store Object target by double-clicking on the <b>Data Store</b> group in the left pane. The middle pane will display a list of all existing Data Store Objects in the current project. When such a list is displayed in the middle pane, the pane is identified as a Drop Target for new Data Store Objects.</li>
                <li value="2">Browse to the Data Warehouse via the <b>Browse &gt; Data Warehouse</b> menu option. </li>
                <li value="3">Drag the Load or Stage table that contains the bulk of the Data Store Object columns into the middle pane. Drop the table anywhere in the pane.</li>
                <li value="4">The new object window appears and identifies the new object as a Data Store Object and provides a default name, based on the name of the selected Load or Stage table. </li>
                <li value="5">Either accept this name or type in the name of the Data Store Object and click <b>ADD</b> to proceed:<p><img src="../../Images/UserGuide_Images/Data Store Objects/Data Store Object Overview_1.png" /></p></li>
            </ol>
            <h3>Data Store Object Properties
        </h3>
            <p>The table Properties window for the new table is displayed.</p>
            <ul>
                <li>If required, the Data Store Object can be changed to be a history table by choosing History from the table type drop-down list on the right side of the dialog. History tables are like slowly changing dimensions in dimensional data warehouses. Refer to <a href="../Dimensions/Building a Dimension.htm">Building a Dimension</a> for details. Change the storage options if desired.</li>
                <li>If prototyping, and the Data Store Object is simple (e.g. one source table) then it is possible to create, load and update the Data Store Object in a couple of steps. </li>
                <li>If you want to do this, select the <b>(Build Procedure...) </b>option from the <b>Update Procedure</b> drop-down, and answer <b>Create and Load</b> to the next question.</li>
            </ul>
            <h3>Create and Load</h3>
            <p>If you chose to build the update procedure the following window appears, after clicking <b>OK</b> on the Properties window. It asks if you want to create the Data Store table in the database and execute the update procedure.</p>
            <p class="ListContinue">
                <img src="../../Images/UserGuide_Images/Data Store Objects/Data Store Obj Props.png" />
            </p>
            <p>If <b>Create</b> or <b>Create and Load</b> is selected and a new procedure creation was chosen, proceed directly to the <a href="Gen Data Store Upd Proc.htm">Generating the Data Store Update Procedure</a>.<br />If you have additional columns to add or columns to delete then select <b>Close </b>and proceed as follows below.</p>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/note.css');" class="TableStyle-note" cellspacing="0">
                <col class="TableStyle-note-Column-Column1" />
                <thead>
                    <tr class="TableStyle-note-Head-Header1">
                        <th class="TableStyle-note-HeadD-Column1-Header1">Note</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-note-Body-Body1">
                        <td class="TableStyle-note-BodyA-Column1-Body1" role="rowheader">
                            <p>It is possible to create and load the table via the Scheduler; by selecting this option from the drop-down list on the <b>Create and Load</b> button:</p>
                            <p>
                                <img src="../../Images/UserGuide_Images/Data Store Objects/Data Store Obj Props_1.png" />
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <h3>Deleting and Changing columns</h3>
            <p>The columns defined for the Data Store Object is displayed in the middle pane. </p>
            <ul>
                <li>It is possible to delete any unwanted columns by highlighting a column name or a group of names and clicking <b>Delete</b>.</li>
                <li>The name of a column can also be changed by by right-clicking the column and choosing <b>Properties</b> to edit its properties. </li>
                <li>Any new name must conform to the database naming standards. Good practice is to use alphanumerics and the underscore character. <br />Refer to <a href="Data Store Col Props.htm">Data Store Column Properties</a> for a more details.</li>
            </ul>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/tip.css');" class="TableStyle-tip" cellspacing="0">
                <col class="TableStyle-tip-Column-Column1" />
                <thead>
                    <tr class="TableStyle-tip-Head-Header1">
                        <th class="TableStyle-tip-HeadD-Column1-Header1">Tip:</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-tip-Body-Body1">
                        <td class="TableStyle-tip-BodyA-Column1-Body1">
                            <p>When prototyping and in the initial stages of an analysis area build, it is best not to remove columns, nor to change their names to any great extent. This type of activity is best left, and done after end users have used the data and provided feedback.</p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <h3>Adding columns</h3>
            <p>With the columns of the Data Store Object displayed in the middle pane, this pane is considered a drop target for additional columns.</p>
            <ul>
                <li>It is a simple matter to select columns from other load and/or stage tables and drag these columns into the middle pane. </li>
                <li>The source table column in the middle pane shows where each column was dragged from. </li>
                <li>The column <b>description</b> could be acquired from three different tables. Best practice is to rename at least two of the columns, perhaps also adding context to the column name. For example, description could become group_description, and so forth.</li>
                <li>There are a number of <span class="mc-variable WS_Branding.CompanyShortName variable">WhereScape</span> <span class="mc-variable WS_Branding.Product variable">RED</span> ancillary columns that do not have a source table. <br />These columns have been added by <span class="mc-variable WS_Branding.CompanyShortName variable">WhereScape</span> <span class="mc-variable WS_Branding.Product variable">RED</span>, and are added depending on earlier choices. </li>
            </ul>
            <p>A description of these columns follows:</p>
            <table class="TableStyle-tablestyle" style="margin-left: 0;margin-right: auto;width: 100%;mc-table-style: url('../../Resources/tablestyles/tablestyle.css');" cellspacing="0">
                <col class="TableStyle-tablestyle-Column-Column1" />
                <col class="TableStyle-tablestyle-Column-Column2" />
                <thead>
                    <tr class="TableStyle-tablestyle-Head-Header1">
                        <th class="TableStyle-tablestyle-HeadE-Column1-Header1">
                        Column name
                    </th>
                        <th class="TableStyle-tablestyle-HeadD-Column2-Header1">
                        Description
                    </th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-tablestyle-Body-Body1">
                        <td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        dss_start_date
                    </td>
                        <td class="TableStyle-tablestyle-BodyG-Column2-Body1">Used for history tables. This column provides a date time stamp when the Data Store Object record came into existence. It is used to ascertain which Data Store Object record should be used when multiple are available.
                    </td>
                    </tr>
                    <tr class="TableStyle-tablestyle-Body-Body1">
                        <td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        dss_end_date
                    </td>
                        <td class="TableStyle-tablestyle-BodyG-Column2-Body1">Used for history tables. This column provides a date time stamp when the Data Store Object record ceased to be the current record. It is used to ascertain which Data Store Object record should be used when multiple are available.
                    </td>
                    </tr>
                    <tr class="TableStyle-tablestyle-Body-Body1">
                        <td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        dss_current_flag
                    </td>
                        <td class="TableStyle-tablestyle-BodyG-Column2-Body1">Used for Data Store history tables. This flag identifies the current record where multiple versions exist.
                    </td>
                    </tr>
                    <tr class="TableStyle-tablestyle-Body-Body1">
                        <td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        dss_source_system_key
                    </td>
                        <td class="TableStyle-tablestyle-BodyG-Column2-Body1">Added to support history tables that cannot be fully conformed, and the inclusion of subsequent source systems. See the ancillary settings section for more details.
                    </td>
                    </tr>
                    <tr class="TableStyle-tablestyle-Body-Body1">
                        <td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        dss_version
                    </td>
                        <td class="TableStyle-tablestyle-BodyG-Column2-Body1">Used for Data Store history tables. This column contains the version number of a Data Store history tables record. Numbered from 1 upwards with the highest number being the latest or current version. It forms part of the unique constraint for the business key of a Data Store history tables.
                    </td>
                    </tr>
                    <tr class="TableStyle-tablestyle-Body-Body1">
                        <td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        dss_update_time</td>
                        <td class="TableStyle-tablestyle-BodyG-Column2-Body1">Indicates when the record was last updated in the data warehouse.
</td>
                    </tr>
                    <tr class="TableStyle-tablestyle-Body-Body1">
                        <td class="TableStyle-tablestyle-BodyB-Column1-Body1">
                        dss_create_time
                    </td>
                        <td class="TableStyle-tablestyle-BodyA-Column2-Body1">Indicates when the record was first created in the data warehouse
                    </td>
                    </tr>
                </tbody>
            </table>
            <h3>Creating the table</h3>
            <p>Once the Data Store Object has been defined in the metadata, we need to physically create the table in the database. </p>
            <ol>
                <li value="1">This is done by right-clicking on the Data Store Object in the left pane and selecting <b>Create (ReCreate)</b> from the pop-up menu.</li>
                <li value="2">The Results  pane displays the results of the creation. A message confirms that the Data Store Object was created. A copy of the actual database create statement and if defined, the results of any index create statements is listed. For the initial create, no indexes will be defined.</li>
                <li value="3">If the table was not created, then ascertain and fix the problem. A common problem is a 'Duplicate column' where a column has the same name in two of the source tables. The best way to find such a column is to double-click the list heading <b>Column Name</b>, which sorts the column names into alphabetical order. </li>
                <li value="4">Another double-click on the heading sorts the columns back into their create order.&#160; </li>
            </ol>
            <p>The next section covers <a href="Gen Data Store Upd Proc.htm">Generating the Data Store Update Procedure</a>.</p>
            <p id="linespace" data-mc-conditions="Outputs.Exclude_In_Print">&#160;</p>
            <hr width="100%" size="0" align="center" data-mc-conditions="Outputs.Exclude_In_Print" />
            <p id="spacing" data-mc-conditions="Outputs.Exclude_In_Print">&#160;</p>
        </div>
    </body>
</html>