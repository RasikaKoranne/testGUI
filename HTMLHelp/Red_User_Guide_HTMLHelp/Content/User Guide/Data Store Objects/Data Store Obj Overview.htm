<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-toc-path="Data Store Objects" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" /><title>Overview</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/wmd-onlinehelp-style.css" rel="stylesheet" type="text/css" />
        <link href="../../Resources/tablestyles/note.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="nocontent">
            <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
            </div>
        </div>
        <div role="main" id="mc-main-content">
            <h2 class="Heading2">Overview</h2>
            <p>A Data Store Object is a data warehouse object used to store any type of data for later processing. <br />In <span class="mc-variable WS_Branding.CompanyShortName variable">WhereScape</span> <span class="mc-variable WS_Branding.Product variable">RED</span>, Data Store objects have many of the code generating attributes of Stage, Dimension and Fact tables. Data Store objects can be thought of as a source system for the data warehouse. <br />Alternatively, they may be reported off directly by users and reporting tools. Data Store Objects can be considered either reference or transactional in nature.</p>
            <p>A Data Store Object is built from the Data Warehouse connection. Unless you are retrofitting an existing system, Data Store Objects are typically built from one or more Load or Stage tables. <br />The Data Store model may be retrofitted from an enterprise modeling tool. Refer to <a href="../Retrofitting/Importing a Data Model.htm">Importing a Data Model</a> for details.</p>
            <p>The usual steps for creating a Data Store model are defined below and are covered in this chapter. </p>
            <p>The steps are:</p>
            <ol>
                <li value="1">Identify the source reference or transactional data that will constitute the Data Store Object. If the data is sourced from multiple tables ascertain if a join between the source tables is possible, or if one or more intermediate stage (work) tables would be a better option.</li>
                <li value="2">Using the 'drag and drop' functionality drag the load or stage table that is the primary source of information for the Data Store Object into a Data Store target. Refer to <a href="Build Data Store Obj.htm">Building a Data Store Object</a> for details.</li>
                <li value="3">If there's only one source table and all of the columns from it are being used, you can select the auto create option to build and load the table. This automatically completes the next four steps. Refer to <a href="Build Data Store Obj.htm">Building a Data Store Object</a> for details..</li>
                <li value="4">Add columns from other Load and/or Stage tables if required. Refer to <a href="Build Data Store Obj.htm">Building a Data Store Object</a> for details.</li>
                <li value="5">Create the Data Store Object in the database. Refer to <a href="Build Data Store Obj.htm">Building a Data Store Object</a> for details.</li>
                <li value="6">Build the update procedure. Refer to <a href="Gen Data Store Upd Proc.htm">Generating the Data Store Update Procedure</a>.</li>
                <li value="7">Run the update procedure and analyze the results.</li>
            </ol>
            <p>If necessary, modify the update procedure or create a custom procedure.</p>
            <p>&#160;</p>
            <p>
                <img src="../../Images/UserGuide_Images/Data Store Objects/Data Store Object Overview.png" />
            </p>
            <h4>Data Store Object Keys</h4>
            <p>Data Store Objects have Business Keys, they do not usually have Artificial Keys.</p>
            <h4>Business Key</h4>
            <p>The business key is the column or columns that uniquely identify a record within a Data Store Object. </p>
            <p>If the Data Store Object maps back to a single or a main table in the source system, it is usually possible to ascertain the business key by looking at the unique keys for that source table. </p>
            <p>The business key is sometimes referred to as the 'natural' key. Examples of business keys are:</p>
            <ul>
                <li>The product SKU in a product table</li>
                <li>The customer code in a customer table</li>
                <li>The IATA airport code in an airport table.</li>
            </ul>
            <p>It is assumed that business keys will never be NULL. If a NULL value is possible in a business key then the generated code needs to be modified to handle the NULL value by assigning some default value. <br />In the following examples, the business key column is modified by using a database function and default value:</p>
            <ul>
                <li><b>DB2 and Teradata: </b>COALESCE(business_key,'N/A')</li>
                <li><b>SQL Server: </b>ISNULL(business_key,'N/A')</li>
                <li><b>Oracle: </b>NVL(business_key,'N/A')</li>
            </ul>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/note.css');" class="TableStyle-note" cellspacing="0">
                <col class="TableStyle-note-Column-Column1" />
                <thead>
                    <tr class="TableStyle-note-Head-Header1">
                        <th class="TableStyle-note-HeadD-Column1-Header1">Note</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-note-Body-Body1">
                        <td class="TableStyle-note-BodyA-Column1-Body1" role="rowheader">Business keys are assumed to never be NULL. If they can be null it is best to transform them to some value prior to the Data Store or Stage table update. <br />If this is not done, an unmodified update procedure will probably fail with a duplicate key error on the business key index.</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>