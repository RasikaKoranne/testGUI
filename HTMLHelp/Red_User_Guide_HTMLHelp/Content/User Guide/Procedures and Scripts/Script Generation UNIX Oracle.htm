<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-toc-path="Procedures and Scripts|Script Generation" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" /><title>Script Generation (UNIX/Oracle)</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/wmd-onlinehelp-style.css" rel="stylesheet" type="text/css" />
        <link href="../../Resources/tablestyles/note.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../Resources/tablestyles/tip.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="nocontent">
            <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
            </div>
        </div>
        <div role="main" id="mc-main-content">
            <h3 class="Heading3">Script Generation (UNIX/Oracle)</h3>
            <p class="BodyText">A sample UNIX script for Oracle is as follows. The key components of the script are described below:</p>
            <p class="BodyText">
                <img src="../../Images/UserGuide_Images/Procs and Scrps/Script Generation UNIX Oracle.gif" />
            </p>
            <p class="BodyText">
                <img src="../../Images/UserGuide_Images/Procs and Scrps/Script Generation UNIX Oracle_1.gif" />
            </p>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/tip.css');" class="TableStyle-tip" cellspacing="0">
                <col class="TableStyle-tip-Column-Column1" />
                <thead>
                    <tr class="TableStyle-tip-Head-Header1">
                        <th class="TableStyle-tip-HeadD-Column1-Header1">Tip</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-tip-Body-Body1">
                        <td class="TableStyle-tip-BodyA-Column1-Body1">
                            <p>Parameters can also be added to Scripts to facilitate deployment processes or environment changes without the need to regenerate scripts. Parameters can be added to scripts of Load and Export tables.</p>
                            <p>For example: add $P&lt;ParameterName&gt;$ to the script where $P$ is the parameter indicator as show below.</p>
                            <p>Before adding the Parameter to the script, create the desired parameter in <b>Tools &gt; Parameters&gt; Add Parameter </b>(context menu option).<br /><br /><img src="../../Images/UserGuide_Images/Procs and Scrps/Script Generation UNIX Oracle_465x180.png" style="width: 465;height: 180;" class="img_1" /><br /><br /><img src="../../Images/UserGuide_Images/Procs and Scrps/Script Generation UNIX Oracle_1_372x43.png" style="width: 372;height: 43;" class="img_1" /></p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <p class="BodyText">The script makes use of two environmental variables called DSS_USER and DSS_PWD. These variables are established in the environment by the scheduler. If the script is to be executed outside of scheduler control then these two variables will need to be assigned after the LOAD_FILE variable.</p>
            <p class="BodyText">The first section of the script defines the load_file variable. The second section provides a timed wait for the load file to arrive. By default, the WAITSECS variable is set to zero so that no wait occurs. This can be set to a number of seconds that the script is to wait for the file to arrive.</p>
            <p class="BodyText">Once the wait has completed, either through a time expiry or through the location of the file, we check that the file is present, and if not found report back a warning. This warning can be changed to an error by changing the first echo statement to "-2". See the syntax section for more information.&#160; </p>
            <p class="BodyText">When the file based load is used instead of the script based load, the scheduler looks for a trigger file if defined, and will exit with the specified status if the file is not found.</p>
            <p class="BodyText">
                <img src="../../Images/UserGuide_Images/Procs and Scrps/Script Generation UNIX Oracle_2.gif" />
            </p>
            <p class="BodyText">This section of the script is commented out by default. It is used when a trigger file is present. Such a file contains control information about the main file to be loaded and arrives after the main file to indicate that the main file transfer has completed and that it is OK to load.</p>
            <p class="BodyText">This section loads the contents of the trigger file into the Parameters table, so that the table can be validated. See the section on Post Load procedures for an explanation on how trigger files are used to validate a load file.</p>
            <p class="BodyText">
                <img src="../../Images/UserGuide_Images/Procs and Scrps/Script Generation UNIX Oracle_3.gif" />
            </p>
            <p class="BodyText">This section calls sql*loader to load the file. It makes use of a temporary file to build as a control file and then calls sqlldr to load the data. Note that the load is actually in a for loop. Wild card file names can be used to load multiple files. Each file to be loaded must have the same format.</p>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/note.css');" class="TableStyle-note" cellspacing="0">
                <col class="TableStyle-note-Column-Column1" />
                <thead>
                    <tr class="TableStyle-note-Head-Header1">
                        <th class="TableStyle-note-HeadD-Column1-Header1">Note</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-note-Body-Body1">
                        <td class="TableStyle-note-BodyA-Column1-Body1" role="rowheader">The data being loaded is appended to the database table. As part of the scheduler run, the Load table is truncated if the property for truncation is set. In this way, multiple files can be loaded into the database table.</td>
                    </tr>
                </tbody>
            </table>
            <p class="BodyText"> </p>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/tip.css');" class="TableStyle-tip" cellspacing="0">
                <col class="TableStyle-tip-Column-Column1" />
                <thead>
                    <tr class="TableStyle-tip-Head-Header1">
                        <th class="TableStyle-tip-HeadD-Column1-Header1">Tip</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-tip-Body-Body1">
                        <td class="TableStyle-tip-BodyA-Column1-Body1">If this script is to be executed outside the control of the WhereScape RED scheduler, then a truncate statement may need to be performed on the database Load table. This would normally be placed before the 'for loop' and would look something like the following:</td>
                    </tr>
                </tbody>
            </table>
            <p class="TableBodyText"><code>echo "truncate table load_budget_txt;" &gt;/tmp/wsl2.sql</code>
            </p>
            <p class="TableBodyText"><code>echo "commit;" &gt;&gt;/tmp/wsl2.sql</code>
            </p>
            <p class="TableBodyText"><code>echo "exit" &gt;&gt;/tmp/wsl2.sql</code>
            </p>
            <p class="TableBodyText"><code>sqlplus $DSS_USER/$DSS_PWD @/tmp/wsl2.sql &gt;/dev/null</code>
            </p>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/note.css');" class="TableStyle-note" cellspacing="0">
                <col class="TableStyle-note-Column-Column1" />
                <thead>
                    <tr class="TableStyle-note-Head-Header1">
                        <th class="TableStyle-note-HeadD-Column1-Header1">Note</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-note-Body-Body1">
                        <td class="TableStyle-note-BodyA-Column1-Body1" role="rowheader">The first echo has a single output '&gt;' whereas the subsequent lines have two '&gt;&gt;'. The first output command creates or re-creates the file and the subsequent lines append to it. We put the output of the command to the null device as we do not want data in the output stream that does not match our syntax</td>
                    </tr>
                </tbody>
            </table>
            <p class="BodyText">
                <img src="../../Images/UserGuide_Images/Procs and Scrps/Script Generation UNIX Oracle_4.gif" />
            </p>
            <p class="BodyText">This section of the script checks the return code from the sql*loader command. Depending on the code it either identifies success, a warning or an error. In any non success situation it puts the log file out to the error stream '&gt;&amp;2'. This will result in the information ending up in the Detail/Error log when this script is executed through the scheduler.</p>
            <p class="BodyText">
                <img src="../../Images/UserGuide_Images/Procs and Scrps/Script Generation UNIX Oracle_5.gif" />
            </p>
            <p class="BodyText">This final section is largely commented out. It ends with the closing of the for loop that processes each file in a wild card file load.</p>
            <p class="BodyText">The first block of commented out code renames the file and also the trigger file if appropriate. If this action is required, enter the rename path etc. and un-comment this code.</p>
            <p class="BodyText">The break statement 3 lines from the end can be used if just the first file in a wild card file load is required. Simply uncomment this break statement and the script will end after the first file has been loaded.</p>
        </div>
    </body>
</html>