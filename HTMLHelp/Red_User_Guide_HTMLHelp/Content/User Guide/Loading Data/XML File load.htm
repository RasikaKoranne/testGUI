<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-toc-path="Loading Data" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" /><title>XML File load</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/wmd-onlinehelp-style.css" rel="stylesheet" type="text/css" />
        <link href="../../Resources/tablestyles/tablestyle.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../Resources/tablestyles/code.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="nocontent">
            <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
            </div>
        </div>
        <div role="main" id="mc-main-content">
            <h2 class="Heading2">XML File load</h2>
            <p class="BodyText">XML file loads are only supported from a Windows connection. There are multiple formats for data exchange when using XML. See the  sections below for details on how an XML file is handled.</p>&#160;<p class="SubHeading1">To load an XML file located in a Windows directory, proceed as follows:</p><ol><li value="1">Create a connection to the Windows system.</li><li value="2">Browse to the connection and locate the XML file.</li><li value="3">Make Load tables the middle pane drop target by double-clicking on the <b>Load Table</b> object group in the left pane.</li><li value="4">Drag the XML file into the middle pane.</li></ol><p class="BodyText">The only rules concerning the xml file are that the data element tags are the column names and each row of data is a child of the root element. <br />For example:</p><table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/code.css');" class="TableStyle-code" cellspacing="0"><col /><tbody><tr class="TableStyle-code-Body-Body1"><td class="TableStyle-code-BodyA--Body1"><p class="PlainText">&lt;row&gt;</p><p class="PlainText">&lt;dim_customer_key&gt;7&lt;/dim_customer_key&gt;</p><p class="PlainText">&lt;code&gt;228&lt;/code&gt;</p><p class="PlainText">&lt;name&gt;JOHN AND JOES TOYS&lt;/name&gt;</p><p class="PlainText">&lt;address&gt;3700 PARNELL RISE&lt;/address&gt;</p><p class="PlainText">&lt;city&gt;BEAVERTON&lt;/city&gt;</p><p class="PlainText">&lt;state&gt;OR&lt;/state&gt;</p><p class="PlainText">&lt;dss_source_system_key&gt;1&lt;/dss_source_system_key&gt;</p><p class="PlainText">&lt;dss_update_time&gt;2003-10-03T10:02:15.310&lt;/dss_update_time&gt;</p><p class="PlainText">&lt;/row&gt;</p></td></tr></tbody></table><h3>Supported XML Formats</h3><p class="BodyText">WhereScape RED supports two types of xml file construct. The normal xml standards have the data in the xml file and the table definitions in a separate xsd (xml schema definition) file which is only required when the table is being created or when the xml file is being validated for form. An alternate standard is used by Microsoft. This second standard is an in line definition which produces one file which contains a Schema element in the data stream where the column names and their approximate data types are defined.</p><h3>Separate XML and XSD files</h3><p class="BodyText">The normal XML standards have the data in the xml file and the table definitions in a separate xsd (xml schema definition) file which is only required when the table is being created or when the xml file is being validated for form. The xsd file name is found within the xml file in an xsi (xml schema instance) statement which can include a namespace definition; for example:</p><table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/code.css');" class="TableStyle-code" cellspacing="0"><col /><tbody><tr class="TableStyle-code-Body-Body1"><td class="TableStyle-code-BodyA--Body1"><p class="PlainText">&lt;root xmlns="http://www.wherescape.com/wsl-schema"</p><p class="PlainText">xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"</p><p class="PlainText">xsi:schemaLocation="http://www.wherescape.com/load_table.xsd"&gt;</p><p class="BodyText">or no namespace;e.g.</p><p class="PlainText">&lt;root xmlns="http://www.wherescape.com/wsl-schema"</p><p class="PlainText">xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"</p><p class="PlainText">xsi:noNamespaceSchemaLocation="load_table.xsd"&gt;</p></td></tr></tbody></table><p class="BodyText">The xsd file is an xml file and should be found in the same directory as the xml file that calls it. This xsd file will contain the column definitions for the load table which will be defined during the drag and drop.</p><p class="BodyText">The column definitions within the xsd file must be detailed enough to define a load table that the xml file can be loaded into. The data type mapping between the xsd file and the database have been implemented as below:</p><table class="TableStyle-tablestyle" style="margin-left: 0;margin-right: auto;width: 100%;mc-table-style: url('../../Resources/tablestyles/tablestyle.css');" cellspacing="0"><col class="TableStyle-tablestyle-Column-Column1" style="width: 156px;" /><col class="TableStyle-tablestyle-Column-Column2" style="width: 191px;" /><col class="TableStyle-tablestyle-Column-Column2" style="width: 215px;" /><col class="TableStyle-tablestyle-Column-Column2" style="width: 340px;" /><col class="TableStyle-tablestyle-Column-Column2" style="width: 340px;" /><thead><tr class="TableStyle-tablestyle-Head-Header1"><th class="TableStyle-tablestyle-HeadE-Column1-Header1">
                        XSD
                    </th><th class="TableStyle-tablestyle-HeadF-Column2-Header1">
                        SQL Server
                    </th><th class="TableStyle-tablestyle-HeadF-Column2-Header1">
                        Oracle
                    </th><th class="TableStyle-tablestyle-HeadF-Column2-Header1">
                        IBM DB2
                    </th><th class="TableStyle-tablestyle-HeadD-Column2-Header1">Teradata</th></tr></thead><tbody><tr class="TableStyle-tablestyle-Body-Body1"><td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        string with length
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        char()
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        char()
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        char()
                    </td><td class="TableStyle-tablestyle-BodyG-Column2-Body1">
                        char()
                    </td></tr><tr class="TableStyle-tablestyle-Body-Body1"><td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        string with maxlength
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        varchar()
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        varchar2()
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        varchar()
                    </td><td class="TableStyle-tablestyle-BodyG-Column2-Body1">
                        varchar()
                    </td></tr><tr class="TableStyle-tablestyle-Body-Body1"><td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        integer
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        integer
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        integer
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        integer
                    </td><td class="TableStyle-tablestyle-BodyG-Column2-Body1">
                        integer
                    </td></tr><tr class="TableStyle-tablestyle-Body-Body1"><td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        decimal with precision and scale
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        numeric(x,y)
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        number(x,y)
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        decimal(x,y)
                    </td><td class="TableStyle-tablestyle-BodyG-Column2-Body1">
                        numeric(x,y)
</td></tr><tr class="TableStyle-tablestyle-Body-Body1"><td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        dateTime (ISO8601)
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        datetime
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        date
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        timestamp
                    </td><td class="TableStyle-tablestyle-BodyG-Column2-Body1">timestamp
</td></tr><tr class="TableStyle-tablestyle-Body-Body1"><td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        i2
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        integer
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        integer
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        integer
                    </td><td class="TableStyle-tablestyle-BodyG-Column2-Body1">
                        integer
</td></tr><tr class="TableStyle-tablestyle-Body-Body1"><td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        i4
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        integer
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        integer
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        integer
                    </td><td class="TableStyle-tablestyle-BodyG-Column2-Body1">
                        integer
</td></tr><tr class="TableStyle-tablestyle-Body-Body1"><td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        r4
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        float
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        number
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        float
                    </td><td class="TableStyle-tablestyle-BodyG-Column2-Body1">
                        varchar(40)
</td></tr><tr class="TableStyle-tablestyle-Body-Body1"><td class="TableStyle-tablestyle-BodyH-Column1-Body1">
                        r8
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        float
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        number
                    </td><td class="TableStyle-tablestyle-BodyI-Column2-Body1">
                        float
                    </td><td class="TableStyle-tablestyle-BodyG-Column2-Body1">
                        varchar(40)
</td></tr><tr class="TableStyle-tablestyle-Body-Body1"><td class="TableStyle-tablestyle-BodyB-Column1-Body1">
                        float
                    </td><td class="TableStyle-tablestyle-BodyC-Column2-Body1">
                        float
                    </td><td class="TableStyle-tablestyle-BodyC-Column2-Body1">
                        number
                    </td><td class="TableStyle-tablestyle-BodyC-Column2-Body1">
                        float
                    </td><td class="TableStyle-tablestyle-BodyA-Column2-Body1">
                        varchar(40)
</td></tr></tbody></table><p class="BodyText">These are the ISO-ANSI&#160; SQL/XML standards and in the case of integers, datetime and floats the column can be defined with one line. i.e.</p><table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/code.css');" class="TableStyle-code" cellspacing="0"><col /><tbody><tr class="TableStyle-code-Body-Body1"><td class="TableStyle-code-BodyA--Body1"><p class="PlainText">&lt;xsd:element name="Policy_ID" type="xsd:integer"/&gt;</p><p class="PlainText">&lt;xsd:element name="Quote_Date" type="xsd:dateTime"/&gt;</p><p class="PlainText">&lt;xsd:element name="Quote_Price" type="xsd:r4"/&gt;</p></td></tr></tbody></table><p class="BodyText">In the case of strings and decimals the column requires a bit more detail to produce the correct data type. Strings can be fixed length with padded data by using the length attribute. </p><p class="BodyText">The following will produce a char(1) column called Excess_Waiver:</p><table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/code.css');" class="TableStyle-code" cellspacing="0"><col /><tbody><tr class="TableStyle-code-Body-Body1"><td class="TableStyle-code-BodyA--Body1"><p class="PlainText">&lt;xsd:element name="Excess_Waiver"&gt;</p><p class="PlainText">&lt;xsd:restriction base="xsd:string"&gt;</p><p class="PlainText">&lt;xsd:length value="1"/&gt;</p><p class="PlainText">&lt;/xsd:restriction&gt;</p><p class="PlainText">&lt;/xsd:element&gt;</p></td></tr></tbody></table><p class="BodyText">Strings can be of variable length by using the maxLength attribute. The following produces a column of SQL Server varchar(8) or Oracle varchar2(8) called Password:</p><table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/code.css');" class="TableStyle-code" cellspacing="0"><col /><tbody><tr class="TableStyle-code-Body-Body1"><td class="TableStyle-code-BodyA--Body1"><p class="PlainText">&lt;xsd:element name="Password"&gt;</p><p class="PlainText">&lt;xsd:restriction base="xsd:string"&gt;</p><p class="PlainText">&lt;xsd:maxLength value="8"/&gt;</p><p class="PlainText">&lt;/xsd:restriction&gt;</p><p class="PlainText">&lt;/xsd:element&gt;</p></td></tr></tbody></table><p class="BodyText">Decimal numbers are defined with the precision and scale attributes. If the scale attribute is zero or missing then the column will be a whole number of size precision. The following produces a SQL Server column of numeric(6) or an Oracle column of number(6):</p><table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/code.css');" class="TableStyle-code" cellspacing="0"><col /><tbody><tr class="TableStyle-code-Body-Body1"><td class="TableStyle-code-BodyA--Body1"><p class="PlainText">&lt;xsd:element name="code" &gt;</p><p class="PlainText">&lt;xsd:restriction base="xsd:decimal"&gt;</p><p class="PlainText">&lt;xsd:precision value="6"/&gt;</p><p class="PlainText">&lt;xsd:scale value="0"/&gt;</p><p class="PlainText">&lt;/xsd:restriction&gt;</p><p class="PlainText">&lt;/xsd:element&gt;</p></td></tr></tbody></table><p class="BodyText">The following produces a SQL Server column of numeric(8,2) or an Oracle column of number(8,2):</p><table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/code.css');" class="TableStyle-code" cellspacing="0"><col /><tbody><tr class="TableStyle-code-Body-Body1"><td class="TableStyle-code-BodyA--Body1"><p class="PlainText">&lt;xsd:element name="code" &gt;</p><p class="PlainText">&lt;xsd:restriction base="xsd:decimal"&gt;</p><p class="PlainText">&lt;xsd:precision value="8"/&gt;</p><p class="PlainText">&lt;xsd:scale value="2"/&gt;</p><p class="PlainText">&lt;/xsd:restriction&gt;</p><p class="PlainText">&lt;/xsd:element&gt;</p></td></tr></tbody></table><p class="BodyText">An example file with most data types would be as follows:</p><table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/code.css');" class="TableStyle-code" cellspacing="0"><col /><tbody><tr class="TableStyle-code-Body-Body1"><td class="TableStyle-code-BodyA--Body1"><p class="PlainText">&lt;xsd:schema xmlns="http://www.wherescape.com/wsl-schema"</p><p class="PlainText">&#160;&#160;&#160;&#160;&#160; xmlns:xsd="http://www.wherescape.com/XMLSchema"&gt;</p><p class="PlainText">&lt;xsd:element name="Col_name1" type="xsd:integer"/&gt;</p><p class="PlainText">&lt;xsd:element name="Col_name4" type="xsd:dateTime"/&gt;</p><p class="PlainText">&lt;xsd:element name="Col_name5"&gt;</p><p class="PlainText">&lt;xsd:restriction base="xsd:string"&gt;</p><p class="PlainText">&lt;xsd:maxLength value="100"/&gt;</p><p class="PlainText">&lt;/xsd:restriction&gt;</p><p class="PlainText">&lt;/xsd:element&gt;</p><p class="PlainText">&lt;xsd:element name="Col_name6"&gt;</p><p class="PlainText">&lt;xsd:restriction base="xsd:string"&gt;</p><p class="PlainText">&lt;xsd:length value="100"/&gt;</p><p class="PlainText">&lt;/xsd:restriction&gt;</p><p class="PlainText">&lt;/xsd:element&gt;</p><p class="PlainText">&lt;xsd:element name="Col_name7" type="xsd:float"/&gt;</p><p class="PlainText">&lt;xsd:element name="Col_name8" &gt;</p><p class="PlainText">&lt;xsd:restriction base="xsd:decimal"&gt;</p><p class="PlainText">&lt;xsd:precision value="6"/&gt;</p><p class="PlainText">&lt;xsd:scale value="2"/&gt;</p><p class="PlainText">&lt;/xsd:restriction&gt;</p><p class="PlainText">&lt;/xsd:element&gt;</p><p class="PlainText">&lt;/xsd:schema&gt;</p></td></tr></tbody></table><p class="BodyText">The column order will be the same as the xsd file.</p><p class="BodyText">Any columns which are missing from the row will be NULL in the loaded row.</p><p class="BodyText">The dateTime format in the xml file is defined as ISO8601 which looks like this:</p><p class="BodyText">2003-10-03T10:02:15.310</p><ul><li>WhereScape RED will load this string into <b>Oracle</b> as:<p><code>TO_DATE(‘20031003100215’,’YYYYMMDDHH24MI’)</code></p></li><li>Or for<b> SQL Server</b>:<p><code>CONVERT(DATETIME,‘2003-10-03T10:02:15.310’,126)</code></p></li><li>Or for<b> DB2</b>:<p><code>TIMESTAMP_FORMAT('20031003100215', 'YYYYMMDDHH24MISS')</code></p></li><li>Or for<b> Teradata</b>:<p><code>TIMESTAMP_FORMAT('20031003100215', 'YYYYMMDDHH24MISS')</code></p>&#160;</li><li>The xsd file is only required to create the load table, if the load table is only being loaded then this file is ignored. </li><li>To check that the xml and xsd files are well formed you can open them with any web browser. If the files display with no errors then they are valid xml files. </li></ul><h3>In line schema definition</h3><p class="BodyText">The other supported xml construct allows the use of in line schema definitions as produced by the Microsoft FOR XML AUTO, ELEMENTS, XMLDATA query. This will produce one file which contains a Schema element in which the column names and their approximate data types are defined. Because the supplied data types are not concise enough to define the table columns correctly, this method will produce load tables of either data type text for SQL Server or varchar2(4000) for Oracle. The column names are taken from the &lt;element type=”col_name”/&gt; strings within the Schema element. The data elements will be the same as above with the column names making up the start and end tags and the rows being the children of the root element. The file that is produced by the FOR XML query above needs to be changed slightly to comply with the xml standard. Remove everything before the Schema element and then give the file a starting root element and a closing root element.eg &lt;root&gt; and &lt;/root&gt;</p><p class="BodyText">The xml files can optionally start with an xml pre process statement. For example:</p><p class="PlainText"><code>&lt;?xml version=”1.0”?&gt;</code></p><p class="BodyText">They may also contain xml comments. For example:</p><p class="PlainText"><code>&lt;!— comments&#160;&#160;&#160; --&gt;</code>&#160;&#160;&#160;&#160;&#160;&#160;&#160; </p><p class="PlainText">&#160;</p></div>
    </body>
</html>