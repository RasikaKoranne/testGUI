<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-toc-path="Model Tables" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" /><title>Model Tables Overview</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/wmd-onlinehelp-style.css" rel="stylesheet" type="text/css" />
        <link href="../../Resources/tablestyles/note.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="nocontent">
            <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
            </div>
        </div>
        <div role="main" id="mc-main-content">
            <h2 class="Heading2">Model Tables Overview</h2>
            <p>
                <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/note.css');" class="TableStyle-note" cellspacing="0">
                    <col class="TableStyle-note-Column-Column1" />
                    <thead>
                        <tr class="TableStyle-note-Head-Header1">
                            <th class="TableStyle-note-HeadD-Column1-Header1">Note</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-note-Body-Body1">
                            <td class="TableStyle-note-BodyA-Column1-Body1" role="rowheader">
                                <p><span class="mc-variable WS_Branding.CompanyShortName variable">WhereScape</span> <span class="mc-variable WS_Branding.Product variable">RED</span> version 8.1.1.0 and above no longer supports the Model Table object type. However, users that have existing Model table objects in their data warehouse can retain and continue to use them.&#160;</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </p>
            <p>Model objects are used to create EDW 3NF models in an enterprise data warehouse. They can contain surrogate keys to other model tables. </p>
            <p>A model is built from the Data Warehouse connection. Unless you are doing a retro-fit of an existing system, model tables are typically built from one or more stage tables.</p>
            <p>The normal steps for creating a model table are defined below and are covered in this chapter. The steps are:</p>
            <ol>
                <li style="list-style-type: disc;" value="1">Identify the source transactional or reference data that will constitute the model table. If the data is sourced from multiple tables ascertain if a join between the source tables is possible.</li>
                <li style="list-style-type: disc;" value="2">Using the 'drag and drop' functionality drag the load table that is the primary source of information for the model table into a model target. Refer to Building a Model Table.</li>
                <li style="list-style-type: disc;" value="3">If only one table is being sourced and most of the columns are to be used (or if prototyping) you can select the auto create option to build and load the model table and skip the next 4 steps. Refer to Building a Model Table.</li>
                <li style="list-style-type: disc;" value="4">Create the model table in the database. Refer to Building a Model Table.</li>
                <li style="list-style-type: disc;" value="5">Build the update procedure. Refer to Generating the Model Table Update Procedure.</li>
                <li style="list-style-type: disc;" value="6">Run the update procedure and analyze the results. Refer to Generating the Model Table Update Procedure.</li>
            </ol>
            <p>Modify the update procedure as required.</p>
            <h3>Model Keys</h3>
            <p>Model tables have up to two types of keys that we will refer to frequently. </p>
            <p>These are the <b>Business Key</b> and the <b>Artificial Key</b>. A definition of these two key types follows:</p>
            <h3>Business Key</h3>
            <p>The business key is the column or columns that uniquely identify a record within the model table. Where the model maps back to a single or a main table in the source system, it is usually possible to ascertain the business key by looking at the unique keys for that source table. Some people refer to the business key as the 'natural' key. Examples of business keys are:</p>
            <ol>
                <li style="list-style-type: disc;" value="1">The product SKU in a product model table</li>
                <li style="list-style-type: disc;" value="2">The customer code in a customer model table</li>
                <li style="list-style-type: disc;" value="3">The calendar date in a date model table</li>
                <li style="list-style-type: disc;" value="4">The 24 hour time in a time model table (e.g. HHMM) (e.g.1710)</li>
                <li style="list-style-type: disc;" value="5">The airport short code in an airport model table.</li>
            </ol>
            <p>It is assumed that business keys will never be NULL. If a null value is possible in a business key then the generated code will need to be modified to handle the null value by assigning some default value. For example the 'Where' clause in a model update may become:</p>
            <p>Where coalesce(business_key,'N/A') = coalesce (v_LoadRec.business_key,'N/A')</p>
            <p>
                <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/note.css');" class="TableStyle-note" cellspacing="0">
                    <col class="TableStyle-note-Column-Column1" />
                    <thead>
                        <tr class="TableStyle-note-Head-Header1">
                            <th class="TableStyle-note-HeadD-Column1-Header1">Note</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-note-Body-Body1">
                            <td class="TableStyle-note-BodyA-Column1-Body1" role="rowheader">
                                <p>Business keys are assumed to never be Null. If they could be null it is best to transform them to some value prior to model or stage table update. If this is not done an unmodified update will probably fail with a duplicate key error on the business key index.</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </p>
            <h3>Artificial Key</h3>
            <p>The artificial key is the unique identifier that is used to join a model table record to another model table. When joining model tables to other model tables it would be possible to perform the join using the business key. For model tables with a large number of records this however would result in slow query times and very large indexes. As query time is one of our key drivers in data warehouse implementations the best answer is often to use some form of artificial key. A price is paid in the additional processing required to build the model table rows (particularly high volume transaction model tables rows), but this is offset by the reduced query times, storage and index sizes.</p>
            <p>The artificial key is an integer and is built sequentially from 1 upwards. See the section on artificial keys for a more detailed explanation. An artificial key is sometimes referred to as a "surrogate" key.</p>
            <p>
                <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/note.css');" class="TableStyle-note" cellspacing="0">
                    <col class="TableStyle-note-Column-Column1" />
                    <thead>
                        <tr class="TableStyle-note-Head-Header1">
                            <th class="TableStyle-note-HeadD-Column1-Header1">Note</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-note-Body-Body1">
                            <td class="TableStyle-note-BodyA-Column1-Body1" role="rowheader">
                                <p>The default behavior of RED can be changed to not automatically add surrogate keys. Refer to <a href="../../User Guide/Default Settings/Repository Identification.htm">Settings - Repository Identification</a>.</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </p>
            <p>&#160;</p>
        </div>
    </body>
</html>