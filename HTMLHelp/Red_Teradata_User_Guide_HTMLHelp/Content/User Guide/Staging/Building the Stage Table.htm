<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-toc-path="Staging" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../Skins/Favicons/browserconfig.xml" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" /><title>Building the Stage Table</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/wmd-onlinehelp-style.css" rel="stylesheet" type="text/css" />
        <link href="../../Resources/tablestyles/tip.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../Resources/tablestyles/note.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="icon" sizes="16x16" href="../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="nocontent">
            <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
            </div>
        </div>
        <div role="main" id="mc-main-content">
            <h2>Building the Stage Table</h2>
            <p>Building the stage table is potentially the most challenging part of the overall task of building a data warehouse analysis area.</p>
            <p>Most of the effort required is in the design phase, in terms of knowing what data needs to come into the fact table that will ultimately be built.</p>
            <p>This section assumes that the decision as to what to include has been made.</p>
            <h3 class="SpecialBold_1">Multiple Data Sources</h3>
            <p class="BodyText">A Stage table typically contains the change data for a detail fact table. As such, it normally maps to a specific function within the business and in many cases relates back to one main OLTP table. In many cases however, it may be necessary to combine information from a number of tables. One of the decisions required is whether or not it is practical or even possible to join the data from the different source tables.&#160; </p>
            <p class="BodyText">We could however, also include two additional source tables being invoice_header and invoice_line which contain specific information relating to what was on the invoice. We may want our fact table to contain information from these tables as well. Although these two tables may contain the order_number and hence potentially allow a join with the order tables we may choose not to perform such a join for performance reasons. In this case we have three obvious choices in terms of how we ultimately update our fact table. </p>
            <p class="BodyText">The choices are:</p>
            <ol>
                <li value="1">Join all four tables using one large join in our staging table.</li>
                <li value="2">Update the staging table in two passes; one pass updating the order information, the other pass updating the invoice information.</li>
                <li value="3">Generate two Stage tables, one for order and one for invoice. Use these two staging tables to update the one sales_detail fact table.</li>
            </ol>
            <p>Although all three options are viable and a normal situation in the <span class="mc-variable WS_Branding.CompanyShortName variable">WhereScape</span> <span class="mc-variable WS_Branding.Product variable">RED</span> environment, options (2) and (3) will require specific coding and modifications to the generated procedures from the outset. </p>
            <p>Given the example provided, option (2) would be the normal approach; although in some cases option (3) would be valid.</p>
            <h2 class="SpecialBold_1">Drag and Drop</h2>
            <p class="BodyText">The best approach in creating a Stage table is to choose the source table that contains the most fields that we will be using and drag this table into the stage target. </p>
            <p class="BodyText">We can then drag specific columns from the other source tables until we have all the source data that is required.</p>
            <p class="BodyText">The process for defining the metadata is as follows:</p>
            <ol>
                <li value="1">Double-click on the <b>Stage Table</b> object group in the left pane. This will result in all existing stage tables being displayed in the middle pane. This also sets the middle pane as a <b>stage drop target</b>.</li>
                <li value="2">Browse the Data warehouse connection to display your Load tables in the right pane. This is done via the <b>Browse &gt; Data Warehouse</b> menu option.</li>
                <li value="3">Drag the <b>primary load table</b> (i.e. the one with the most columns, or the lowest data granularity) from the right pane and drop it into the middle pane. A dialog appears to create the new staging object. </li>
                <li value="4">Leave the object type as 'Stage Table' and change the name to reflect what is being done.</li>
                <li value="5">Once a valid name is entered, the properties for the new Stage table are displayed. Normally these would be left unchanged except perhaps for storage settings.</li>
                <li value="6">Once the <b>Properties</b> window is closed, the columns for the new Stage table are displayed in the middle pane. This middle pane is now considered a <b>drop target for this specific stage table</b>. Any additional columns or tables dropped into the middle pane are considered additions to this stage table definition. Any columns that are not required can be deleted.</li>
                <li value="7">Drag and drop <b>additional columns</b> from other source tables if appropriate.&#160; </li>
                <li value="8">Drag in the <b>dimension artificial key</b> from each Dimension that is to be joined to the Stage/Fact table. </li>
                <li value="9">You can only join a Dimension, if a business key exists amongst the stage table columns or if it is possible to derive that business key in some way from the columns or other dimensions.</li>
            </ol>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/note.css');" class="TableStyle-note" cellspacing="0">
                <col class="TableStyle-note-Column-Column1" />
                <thead>
                    <tr class="TableStyle-note-Head-Header1">
                        <th class="TableStyle-note-HeadD-Column1-Header1">Note</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-note-Body-Body1">
                        <td class="TableStyle-note-BodyA-Column1-Body1" role="rowheader">If a column is being used to join information from two or more source tables, that column must only appear once in the Stage table. It is irrelevant which table is used to create the column in the new Stage table.</td>
                    </tr>
                </tbody>
            </table>
            <p>Once completed, your list of columns for the Stage table should look something like the list below. Notice the <b>Source Table</b> for each column.</p>
            <p>
                <img src="../../Images/UserGuide_Images/Staging/The source table src table.png">
                </img>
            </p>
            <p class="BodyText">The source table (src table) reflects where each column was dragged from. </p>
            <p class="BodyText">In the example above, the bulk of the columns came from the load_order_line table, and the customer_code, order_date and ship_date came from the load_order_header columns. <br />These two Load tables will be joined via the order_number column. This order_number column appears in both load tables but is sourced, in this example, from the load_order_line table. </p>
            <p class="BodyText">Each dimension artificial key was dragged from its appropriate table. The final column 'dss_update_time' was generated by <span class="mc-variable WS_Branding.CompanyShortName variable">WhereScape</span> RED and has no source.</p>
            <h2 class="SpecialBold_1">Creating the Table</h2>
            <p class="BodyText">Once the Stage table has been defined in the metadata, you need to physically create the table in the database. </p>
            <ol>
                <li value="1">Right-click the Stage table from the left pane and select <b>Create (ReCreate)</b> from the pop-up menu.</li>
                <li value="2">The results pane displays the results of the creation.&#160;The following example shows a successful creation.<p><img src="../../Images/UserGuide_Images/Staging/Results pane.png" /></p></li>
            </ol>
            <p class="BodyText">The contents of this pane is a message to the effect that the table was created followed by a copy of the actual database create statement, and if defined the results of any index creates. For the initial create no indexes will be defined.</p>
            <p class="BodyText">If the table was not created then ascertain and fix the problem. A common problem is a 'Duplicate column' where a column has been accidentally added twice. </p>
            <p class="BodyText">The best way to find such a column is to double-click the list heading <b>Column Name</b>, to sort the column names into alphabetical order. </p>
            <p class="BodyText">Another double-click on the heading sorts the columns back into their create order. Column ordering can be changed by altering the column order value against a column's Properties.</p>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/tablestyles/tip.css');" class="TableStyle-tip" cellspacing="0">
                <col class="TableStyle-tip-Column-Column1" />
                <thead>
                    <tr class="TableStyle-tip-Head-Header1">
                        <th class="TableStyle-tip-HeadD-Column1-Header1">Tip</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-tip-Body-Body1">
                        <td class="TableStyle-tip-BodyA-Column1-Body1">Double-clicking the heading of a column in a list, sorts the list into alphabetical order based on the column chosen.</td>
                    </tr>
                </tbody>
            </table>
            <p>&#160;</p>
            <p id="linespace" data-mc-conditions="Outputs.Exclude_In_Print">&#160;</p>
            <hr width="100%" size="0" align="center" data-mc-conditions="Outputs.Exclude_In_Print" />
            <p id="spacing" data-mc-conditions="Outputs.Exclude_In_Print">&#160;</p>
        </div>
    </body>
</html>