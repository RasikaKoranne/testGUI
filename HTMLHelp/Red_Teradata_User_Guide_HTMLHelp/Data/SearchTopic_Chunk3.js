define({"234":{y:0,u:"../Content/User Guide/Fact Tables/Detail Fact Tables.htm",l:-1,t:"Detail Fact Tables",i:0.00085884420954181,a:"A Detail Fact table is normally a transactional table that represents the business data at its lowest level of granularity. In many ways, these tables reflect the business processes within the organization.  These Fact tables are usually large and are focused on a specified analysis area.   There ..."},"235":{y:0,u:"../Content/User Guide/Fact Tables/Creating Detail Fact Tables.htm",l:-1,t:"Creating Detail Fact Tables",i:0.00085884420954181,a:"A Detail Fact table is typically created by dragging a staging table onto a fact table list. Once released, the dialog to create the fact table will commence. When a staging table is dragged into the drop target pane (middle pane), all Fact tables are by default Detail Fact tables.  If manually ..."},"236":{y:0,u:"../Content/User Guide/Fact Tables/Gen the Det Fact Upd Proc.htm",l:-1,t:"Generating the Detail Fact Update Procedure",i:0.00085884420954181,a:"Once a detail fact table has been defined in the metadata and created in the database, an update procedure can be generated to handle the update of the fact table. Generating a Procedure To generate a procedure, right-click on the fact table in the left pane and select Properties.  Click on the ..."},"237":{y:0,u:"../Content/User Guide/Fact Tables/Fact Table Column Properties.htm",l:-1,t:"Fact Table Column Properties",i:0.000980518133437148,a:"Each fact table column has a set of associated properties. The definition of each property is defined below: If the Column name or Data type is changed for a column then the metadata will differ from the table as recorded in the database.  Use the Validate \u003e Validate Table Create Status menu option ..."},"238":{y:0,u:"../Content/User Guide/Fact Tables/Fact Table Col Transforms.htm",l:-1,t:"Fact Table Column Transformations",i:0.00169231533720871,a:"Each fact table column can have a transformation associated with it. The transformation is included in the generated procedure and executed as part of the procedure update.  The transformation must therefore be a valid SQL construct that can be included in a SELECT statement.  For example, we could ..."},"239":{y:0,u:"../Content/User Guide/Fact Tables/Fact Table Language Mapping.htm",l:-1,t:"Fact Table Language Mapping",i:0.00085884420954181,a:"The Fact table Properties screen has a tab called Language Mapping. Select the language from the drop-down list and then enter the translations for the Business Display Name and the Description in the chosen language.  The translations for these fields can then be pushed through into OLAP cubes."},"240":{y:0,u:"../Content/User Guide/Aggregation/Aggregation.htm",l:-1,t:"Aggregation",i:0.00085884420954181,a:"Two types of aggregate tables are discussed.   The first is where all non-additive facts and one or more dimensions are removed from a fact table. Typically this results in a smaller table that can answer a subset of the queries that could be posed against the fact table. This aggregate table still ..."},"241":{y:0,u:"../Content/User Guide/Aggregation/Creating an Aggregate Table.htm",l:-1,t:"Creating an Aggregate Table",i:0.00085884420954181,a:"In the left pane double-click on the aggregate group to list the aggregates in the middle pane and set aggregates as the drop target. From the Data Warehouse browse (right) pane drag a fact table into the middle pane and enter the aggregate name. Click ADD. The aggregate properties are displayed. ..."},"242":{y:0,u:"../Content/User Guide/Aggregation/Crtng an Aggrgt Sum Table.htm",l:-1,t:"Creating an Aggregate Summary Table",i:0.00085884420954181,a:"The creation of a summary table proceeds initially in the same way as an aggregate table. In the left pane double-click the Aggregate group to list the aggregates in the middle pane and set aggregates as the drop target. From the Data Warehouse browse (right) pane drag a fact table into the middle ..."},"243":{y:0,u:"../Content/User Guide/Aggregation/Aggregate Tbl Col Props.htm",l:-1,t:"Aggregate Table Column Properties",i:0.00085884420954181,a:"Each aggregate table column has a set of associated properties. The definition of each property is defined below: If the Column name or Data type is changed for a column, then the metadata will differ from the table as recorded in the database. Use the Validate \u003e Validate Table Create Status menu ..."},"244":{y:0,u:"../Content/User Guide/Aggregation/Aggregate Tbl Col Transforms.htm",l:-1,t:"Aggregate Table Column Transformations",i:0.00158888775291384,a:"Each aggregate table column can have a transformation associated with it. The transformation will be included in the generated procedure and will be executed as part of the procedure update. The transformation must therefore be a valid SQL construct that can be included in a Select statement. For ..."},"245":{y:0,u:"../Content/Teradata/Join Indexes Teradata/Join Indexes Teradata.htm",l:-1,t:"Join Indexes",i:0.00085884420954181,a:"Join Indexes Join indexes are used to perform one or more of the following tasks in Teradata: Replicate all or part of a single table using a new primary index Join multiple tables in a pre-join table Aggregates one or more columns of one or more tables WhereScape RED supports all of these uses.  "},"246":{y:0,u:"../Content/Teradata/Join Indexes Teradata/Creating a Join Index Teradata.htm",l:-1,t:"Creating a Join Index",i:0.00085884420954181,a:"Join indexes are used to perform one or more of the following tasks in Teradata: Replicate all or part of a single table using a new primary index Join multiple tables in a pre-join table Aggregates one or more columns of one or more tables WhereScapeRED supports all of these uses."},"247":{y:0,u:"../Content/Teradata/Views Teradata/Views Teradata.htm",l:-1,t:"Views",i:0.00085884420954181,a:"Views Views are normally created to manage locking in Teradata, to join tables together for presentation to users or to provide additional methods for updating underlying tables.  Views can be created from any table type.  "},"248":{y:0,u:"../Content/Teradata/Views Teradata/One to One Views Teradata.htm",l:-1,t:"One to One Views",i:0.00085884420954181,a:"A one to one view is a database view of a dimension table. It may be a full or partial view. It is typically used to provide an access path to the dimension tables with a built in locking clause. In many data warehouses views are built as part of the end user layer, but creating them in the data ..."},"249":{y:0,u:"../Content/Teradata/Views Teradata/Dim Views Alias Teradata.htm",l:-1,t:"Dimension Views for Aliasing",i:0.00085884420954181,a:"A view of a Dimension table used to create an alternative logical object for a Dimension table. It may have some or all columns renamed to match the aliased name of the view. Dimension Views may be used to look up surrogate keys when building staging tables. The process for creating a dimension view ..."},"250":{y:0,u:"../Content/Teradata/Views Teradata/Comp Views Facts Dims Teradata.htm",l:-1,t:"Compound Views, Facts and Dimensions",i:0.00085884420954181,a:"A compound view is used to join tables and views together for presentation to users. They simplify user access, particularly if multiple dimension history tables need to be accessed in a single query. The process for creating a compound view is as follows: Double click the View group object in the ..."},"251":{y:0,u:"../Content/Teradata/Views Teradata/Dim View Hierar Teradata.htm",l:-1,t:"Dimension View Hierarchies",i:0.00085884420954181,a:"Dimension View Hierarchies The various hierarchies associated with a dimension view can be recorded in the WhereScape REDmetadata. These hierarchies are often not used in any form, except to provide documentary completeness and for creating Analysis Services OLAP Cubes.  "},"252":{y:0,u:"../Content/Teradata/Views Teradata/Add Dim View Hierar Teradata.htm",l:-1,t:"Adding a Dimension View Hierarchy",i:0.00085884420954181,a:"Any number of hierarchies can be created against a dimension view. There is no restriction on the form of the hierarchy. To add a new hierarchy, position on the dimension view in the left pane and using the right-click menu, select Hierarchies\u003eAdd Hierarchy. The following window appears. Enter a ..."},"253":{y:0,u:"../Content/Teradata/Views Teradata/Creating a Custom View Teradata.htm",l:-1,t:"Creating a Custom View ",i:0.00085884420954181,a:" A custom view can be created within RED to handle views that are not strictly one to one, such as where multiple tables are joined or where a complex condition is placed on the view. There are two options for custom views, the first where the columns are defined in RED and the \u0027Select\u0027 component of ..."},"254":{y:0,u:"../Content/Teradata/Views Teradata/View Aliases Teradata.htm",l:-1,t:"View Aliases Teradata",i:0.00085884420954181,a:"View Aliases Teradata View Aliases provide multiple deployments of the same view into different Teradata presentation layers. The View Aliases tab enables you to define additional/replica views.  "},"255":{y:0,u:"../Content/Teradata/Analysis Srvcs OLAP Cubes_Tblr Models Teradata/Anlys Srvcs OLAP Cubes Teradata.htm",l:-1,t:"Analysis Services OLAP Cubes",i:0.00085884420954181,a:"Analysis Services OLAP Cubes  "},"256":{y:0,u:"../Content/Teradata/Analysis Srvcs OLAP Cubes_Tblr Models Teradata/OLAP Overview Teradata.htm",l:-1,t:"Olap Overview Teradata",i:0.00085884420954181,a:"A cube is a set of related measures and dimensions that is used to analyze data. A measure is a transactional value or measurement that a user may want to aggregate. The source of measures are usually columns in one or more source tables. Measures are grouped into measure groups. A dimension is a ..."},"257":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/DefDatSrc for OLAP Cube.htm",l:-1,t:"Defining the Data Source for the OLAP Cube",i:0.00085884420954181,a:"Before we can create an OLAP cube, we first need to set up the data warehouse to be used as a source for Analysis Services cubes.  In the Data Warehouse Properties screen, the fields in the section When Connection is an OLAP Data Source are required.   Building the OLAP Connection String  The OLAP ..."},"258":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Defining an OLAP Cube.htm",l:-1,t:"OLAP Defining an OLAP Cube",i:0.00085884420954181,a:"OLAP Cubes can be created from fact, fact view or aggregate objects. A single cube can contain dates from multiple source star schemas, each defined with a measure group. An OLAP Cube consists of many parts namely, measure groups, measures, calculations, actions, dimensions, dimension hierarchies, ..."},"259":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/Inspctng_Mod Adv Cube_prop.htm",l:-1,t:"OLAP Inspecting and Modifying Advanced Cube Properties",i:0.00085884420954181,a:"OLAP Inspecting and Modifying Advanced Cube Properties After the basic OLAP Cube has been defined, various properties of the OLAP Cube can be inspected or modified:  "},"260":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/Crting_OLAPCube_Analys Sers Srvr.htm",l:-1,t:"OLAP Creating an OLAP Cube on the Analysis Services Server",i:0.00085884420954181,a:"If all the tasks above are completed, then it is now possible to create the cube on the Analysis Services server. When positioned on the OLAP Cube name, right-click and select Create (Alter) Cube.  WhereScape RED checks if the key components of the cube are correct before it proceeds to issue the ..."},"261":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Cube Objects.htm",l:-1,t:"OLAP Cube Objects",i:0.00085884420954181,a:"OLAP Cube Objects"},"262":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Cube Properties.htm",l:-1,t:"OLAP Cube Properties",i:0.00085884420954181,a:"The properties associated with a cube are described below. These properties relate both to the cube environment and to the cube itself.  There are seven tabs in the cube Properties screen. The first is the main properties, the second the processing and partitioning options and the rest are for ..."},"263":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Cube Measure Groups.htm",l:-1,t:"OLAP Cube Measure Groups",i:0.00085884420954181,a:"A cube can contain multiple measure groups. In WhereScape RED each measure group can belong to a single cube, and each measure group relates to a single star schema. The Measure Groups Cube processing is defined in the tab entitled Measure Group Properties. The Measure Group Properties are shown by ..."},"264":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Cube Msre Grp Proc_Prtns.htm",l:-1,t:"OLAP Cube Measure Group Processing/Partitions",i:0.00085884420954181,a:"Partitions define separately manageable data slices of the measure group data. Partitions can be created, processed and deleted independently within a Measure Group. Each Measure Group needs at least one partition to be defined to enable the Measure Group to be processed. Partitions are managed ..."},"265":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Cube Msre Grp Prtns.htm",l:-1,t:"OLAP Cube Measure Group Partitions",i:0.00085884420954181,a:"OLAP Cube Measure Group Partitions The Measure Group Partition\u0027s properties are shown by right-clicking the Measure Group Partition displayed in the middle pane and then selecting Properties. The partition\u0027s properties associated with a measure group are described below."},"266":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Cube Measures.htm",l:-1,t:"OLAP Cube Measures",i:0.00085884420954181,a:"Measures represent the numeric attributes of a fact table that are aggregated, using an OLAP aggregate function defined against each Measure. Each Measure is defined against a Measure Group, which is defined against a cube. The properties of a measure are shown by right-clicking a Measure and the ..."},"267":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Cube Calculations.htm",l:-1,t:"OLAP Cube Calculations",i:0.00085884420954181,a:"Calculations provide the ability to define the derivation of a value at query time within a cube. The calculation is most typically a numeric derivation based on measures, but can be defined against any dimension. The calculation is defined in MDX (Multi-Dimensional eXpressions). The definition of a ..."},"268":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Cube Key Perfor Indctrs.htm",l:-1,t:"OLAP Cube Key Performance Indicators",i:0.00085884420954181,a:"In Analysis Services, a KPI is a collection of calculations that are associated with a measure group in a cube that are used to evaluate business success. Typically, these calculations are a combination of Multidimensional Expressions (MDX) expressions or calculated members.  KPIs also have ..."},"269":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Cube Actions.htm",l:-1,t:"OLAP Cube Actions",i:0.00085884420954181,a:"An action provides information to a client application to allow an action to occur based on the property of a clicked dimensional member. Actions can be of different types and they have to be created accordingly.  To view the definition of an Action, right-click the Action and select Properties. The ..."},"270":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Cube Dimensions.htm",l:-1,t:"OLAP Cube Dimensions",i:0.00122386598122782,a:"OLAP Dimensions are associated automatically with a cube when a cube is created in WhereScape RED based on the underlying star schema. OLAP Dimensions that are associated with a cube can be displayed, or additional OLAP Dimensions can be manually added from the list of OLAP Dimensions defined in ..."},"271":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Cube Msr Grp Dims.htm",l:-1,t:"OLAP Cube Measure Group Dimensions",i:0.00085884420954181,a:"OLAP Cube Measure Group Dimensions Measure group dimensions are the relationships between cube Measure Groups and OLAP Dimensions. In WhereScape RED this equates to the relationships between Fact tables and Dimensions in the underlying star schema. The Properties are shown below:"},"272":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Dimension Objects.htm",l:-1,t:"OLAP Dimension Objects",i:0.00085884420954181,a:"OLAP Dimension Objects"},"273":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Dimension Overview.htm",l:-1,t:"OLAP Dimension Overview",i:0.00085884420954181,a:"OLAP Dimensions are dimensions that get created in an Analysis Services database. An OLAP Dimension is a collection of related attributes which can be used to provide information about fact data in one or more cubes. By default, attributes are visible as attribute hierarchies and can be used to ..."},"274":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Dimension Attributes.htm",l:-1,t:"OLAP Dimension Attributes",i:0.00085884420954181,a:"Dimensional attributes contain information about the Dimension object. Attributes are exposed in the cube to provide the ability to navigate and aggregate the data in the cube. User defined hierarchies can be built over attributes to provide drill paths through the data and to aid aggregation. The ..."},"275":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Dim Attr Rels.htm",l:-1,t:"OLAP Dimension Attribute Relationships",i:0.00085884420954181,a:"Attribute relationships define functional dependencies between attributes. If attribute A has a related attribute B in a hierarchical relationship, then an attribute relationship can be defined that assists Analysis Services to aggregate data. To view the Properties of an attribute relationship ..."},"276":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Dimension Hierarchies.htm",l:-1,t:"OLAP Dimension Hierarchies",i:0.00085884420954181,a:"User defined hierarchies define hierarchical relationships between related dimensional attributes (e.g. Geographical or Time based attributes). These related attributes are defined as levels within the hierarchy. To view the properties of a user defined Hierarchy, right-click the Hierarchy and then ..."},"277":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Dim UserDef Hierar Lvls.htm",l:-1,t:"OLAP Dimension User Defined Hierarchy Levels",i:0.00085884420954181,a:"The levels specify the drill path over a set of related attributes. The classic hierarchy levels are Year, Month, Date in a Calendar based hierarchy in the date dimension. To view the Properties of a user defined Hierarchy Level, right-click a user defined Hierarchy Level and then select Properties. ..."},"278":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Changing OLAP Cubes.htm",l:-1,t:"OLAP Changing OLAP Cubes",i:0.00085884420954181,a:"An understanding of the dependency of objects within Analysis Services is the key to figuring out what needs to be dropped or recreated in a cube database using WhereScape RED. Changes to the underlying relational star schema can cause cube processing to fail as the star schema is frozen in the Data ..."},"279":{y:0,u:"../Content/User Guide/Analysis Services OLAP Cubes_Tabular Models/OLAP Retrofit OLAP Object.htm",l:-1,t:"OLAP Retrofitting an OLAP Object",i:0.00110219205733249,a:"WhereScape RED provides the functionality for retrofitting OLAP cubes from Analysis Services.  The process to retrofit an OLAP dimension is as follows: Right-click on the OLAP Dimension object heading in the left pane and select New Object.  Enter any name for the object name and click ADD.  On the ..."},"280":{y:0,u:"../Content/User Guide/Transformations/Transformations.htm",l:-1,t:"Transformations",i:0.0118835973931254,a:"Standard  column transformations  can be used in WhereScape RED to perform calculations, change data types or format data. Re-using complex transformations can save a significant amount of time. These can be achieved in the following ways with WhereScape RED: Database Functions WhereScape RED ..."},"281":{y:0,u:"../Content/User Guide/Transformations/Column Transformations.htm",l:-1,t:"Column Transformations",i:0.0163619377101135,a:"Each table or export object column can have a transformation associated with it. For all table types, except for load tables, the transformation will be included in the generated procedure for the table. These are executed as part of the procedure update. The transformation must therefore be a valid ..."},"282":{y:0,u:"../Content/User Guide/Transformations/Col Transform Props.htm",l:-1,t:"Column Transformation Properties",i:0.00158888775291384,a:"An example below shows the transformation Properties screen with a simple transformation: The two special update keys allow you to update the column and step either forward or backward to the next column\u0027s properties. ALT-Left Arrow and ALT-Right Arrow can also be used instead of the two special ..."},"283":{y:0,u:"../Content/User Guide/Transformations/Load Tbl Col Transforms.htm",l:-1,t:"Load Table Column Transformations",i:0.0078274853163735,a:"Data entering the data warehouse can be manipulated if required. This manipulation can occur at any stage, but is supported via a number of methods during the Load stage. Load tables provide options to transform data. If multiple pass transformations are required, then a Load table can be created ..."},"284":{y:0,u:"../Content/User Guide/Transformations/Dbase Link Load Transforms.htm",l:-1,t:"Database Link During Load Transformations",i:0.00085884420954181,a:"The during load transformation allows the manipulation of column data as it enters the data warehouse. By default, Database link loads and ODBC based loads have During and After transformations enabled.   When transformations are enabled, the contents of a source table/source column for each column ..."},"285":{y:0,u:"../Content/User Guide/Transformations/File During Load Transforms.htm",l:-1,t:"File During Load Transformations",i:0.00085884420954181,a:"The loading of flat files is performed using the database specific loader. For Oracle, this is SQL*LOADER. For SQL Server it is the Bulk Insert Transact SQL statement. The contents of the Transformation tab in the column\u0027s Properties are the functions and conversions supported by the database ..."},"286":{y:0,u:"../Content/User Guide/Transformations/After Load Transforms.htm",l:-1,t:"After Load Transformations",i:0.00085884420954181,a:"After transformations will initiate a pass of the Load table after the load has occurred. They enable manipulation of the Load table columns using the database and SQL functions.   SQL Server Example: The following after transformation set for the column code in the table load_product ..."},"287":{y:0,u:"../Content/Teradata/Transformations Teradata/Teradata User Defined Functions.htm",l:-1,t:"Teradata User Defined Functions",i:0.00085884420954181,a:"Teradata User Defined Functions (UDFs) can be built using the C programming language and compile directly onto the Teradata server and registered via a SQL command. This can be daunting for many data warehouse developers, who may not know C well, and may not have access to compile UDFs on the ..."},"288":{y:0,u:"../Content/Teradata/Transformations Teradata/Teradata UDF Example.htm",l:-1,t:"Teradata UDF Example",i:0.00085884420954181,a:"A standard example given for Teradata UDFs is building a REPLACE function similar to the Oracle database\u0027s REPLACE function. Here is a simplified example: Step 1: Write c code for UDF as replace.c: Step 2: Put c file onto the Server Copy the c program file onto the data base server into the ..."},"289":{y:0,u:"../Content/User Guide/Transformations/Re-usable Transforms.htm",l:-1,t:"Re-usable Transformations",i:0.00085884420954181,a:"WhereScape RED Re-usable Transformations allow a complex SQL transformation using standard database functions (including User Defined Functions) to be built once and reused in multiple column transformations. Functionality is included to manage and propagate changes to re-usable transformations.    "},"290":{y:0,u:"../Content/User Guide/Transformations/Create New Reusable Transform.htm",l:-1,t:"Creating a New Re-usable Transformation",i:0.00158888775291384,a:"New re-usable transformations are created from the Tools \u003e Define Re-Usable Transformations menu. Creating a new re-usable transformation is a three step process: Specify the name of the transformation Enter metadata for the transformation Define the transformation"},"291":{y:0,u:"../Content/User Guide/Transformations/Specify Name of Transform.htm",l:-1,t:"Specify the Name of the Transformation",i:0.00085884420954181,a:"Specify the Name of the Transformation After selecting Define Re-Usable Transformations from the Tools menu, the following screen is displayed: Click New Transform and enter a name for the re-usable transformation: Click OK.    "},"292":{y:0,u:"../Content/User Guide/Transformations/Enter Reusable Transform Meta.htm",l:-1,t:"Enter Re-usable Transformation Metadata",i:0.00085884420954181,a:"Enter Re-usable Transformation Metadata Enter the following metadata for the transformation to describe the transformation for developers.    "},"293":{y:0,u:"../Content/User Guide/Transformations/Define the Transform Model.htm",l:-1,t:"Define the Transformation Model",i:0.00085884420954181,a:"Once the transformation has been created and the metadata entered, the actual SQL code used by the transformation can be defined. The SQL code can be entered directly or via the Function Builder on the right. To use the Function Builder, expand the tree to find the required function.   Oracle ..."},"294":{y:0,u:"../Content/User Guide/Transformations/Comp Reusable Transform.htm",l:-1,t:"Completed Re-usable Transformation",i:0.00085884420954181,a:"Completed Re-usable Transformation    "},"295":{y:0,u:"../Content/User Guide/Transformations/Changing Reusable Transform.htm",l:-1,t:"Changing a Re-usable Transformation",i:0.00085884420954181,a:"To change a re-usable transformation: Select Re-Usable Transformations from the Tools menu. Choose the transformation from the Transform Name drop-down list. Click on the Model Tab. Change the SQL as required. Click OK. Example of a change to the Model SQL In the example used in Creating a New ..."},"296":{y:0,u:"../Content/User Guide/Transformations/Apply Chngs to Dep Transforms.htm",l:-1,t:"Applying Changes to Dependant Transformations",i:0.00085884420954181,a:"After changing a Re-usable Transformation, a dialog appears asking to confirm that changes should be applied to individual columns using the transformation, where possible: If the Re-usable Transformation doesn\u0027t have any dependant columns, then the following message is displayed: If the Re-usable ..."},"297":{y:0,u:"../Content/User Guide/Transformations/Using Reusable Transforms.htm",l:-1,t:"Using Re-usable Transformations",i:0.00085884420954181,a:"Using Re-usable Transformations Re-usable transformations are used exactly the same way as any standard database Function. They can be used on any object type. Refer to  Column Transformation Properties  for details."},"298":{y:0,u:"../Content/User Guide/Exporting Data/Exporting Data.htm",l:-1,t:"Exporting Data",i:0.00549517021593412,a:"Export objects are used in WhereScape RED to produce ascii files from a single database table or view for a downstream feed. Some or all of the columns in a table or view can be exported.  There are three ways of performing exports in RED: File export - an export where most of the processing is ..."},"299":{y:0,u:"../Content/User Guide/Exporting Data/Building an Export Object.htm",l:-1,t:"Building an Export Object",i:0.00085884420954181,a:"Creating an Export: Browse to the Datawarehouse connection . Create a drop target by double-clicking on the Export object group in the left pane. The middle pane should have a column heading of Export Objects for the leftmost column. Select a table or view in the right pane and drag it into the ..."},"300":{y:0,u:"../Content/Teradata/Exporting Data/File Attributes.htm",l:-1,t:"File Attributes",i:0.00085884420954181,a:"The following fields are available to define the location, name and contents of the exported data file: For Windows File or Script based Exports, you can select the between the FastExport or TPT Data Connector export routines. Example screen for a Windows Script based Export using the TPT Data ..."},"301":{y:0,u:"../Content/User Guide/Exporting Data/File Attributes SSIS Exports.htm",l:-1,t:"File Attributes - SSIS Exports",i:0.00085884420954181,a:"File Attributes - SSIS Exports The following fields below are available to define the location, name and definitions of the exported data file: Integration Services File Attributes example screen Export File Definition SQL Server Integration Services (SSIS)"},"302":{y:0,u:"../Content/User Guide/Exporting Data/Export Column Properties.htm",l:-1,t:"Export Column Properties",i:0.00085884420954181,a:"Export Column Properties General Physical Definition Meta Definition Source Details  "},});